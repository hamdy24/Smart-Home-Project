
Slave.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000015d6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000011c  00800060  000015d6  0000166a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  0080017c  0080017c  00001786  2**0
                  ALLOC
  3 .stab         00001b48  00000000  00000000  00001788  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001464  00000000  00000000  000032d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  00004734  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001f2  00000000  00000000  000048d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000240b  00000000  00000000  00004ac6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001386  00000000  00000000  00006ed1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000011d6  00000000  00000000  00008257  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001c0  00000000  00000000  00009430  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002f6  00000000  00000000  000095f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000096e  00000000  00000000  000098e6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000a254  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 e1 09 	jmp	0x13c2	; 0x13c2 <__vector_12>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 ed       	ldi	r30, 0xD6	; 214
      68:	f5 e1       	ldi	r31, 0x15	; 21
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ac 37       	cpi	r26, 0x7C	; 124
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	ac e7       	ldi	r26, 0x7C	; 124
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ae 37       	cpi	r26, 0x7E	; 126
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <main>
      8a:	0c 94 e9 0a 	jmp	0x15d2	; 0x15d2 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 b2 0a 	jmp	0x1564	; 0x1564 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 ce 0a 	jmp	0x159c	; 0x159c <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 be 0a 	jmp	0x157c	; 0x157c <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 da 0a 	jmp	0x15b4	; 0x15b4 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 be 0a 	jmp	0x157c	; 0x157c <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 da 0a 	jmp	0x15b4	; 0x15b4 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 b2 0a 	jmp	0x1564	; 0x1564 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 ce 0a 	jmp	0x159c	; 0x159c <__epilogue_restores__>

00000632 <__divsf3>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 ba 0a 	jmp	0x1574	; 0x1574 <__prologue_saves__+0x10>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	b9 e0       	ldi	r27, 0x09	; 9
     650:	eb 2e       	mov	r14, r27
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     672:	29 85       	ldd	r18, Y+9	; 0x09
     674:	22 30       	cpi	r18, 0x02	; 2
     676:	08 f4       	brcc	.+2      	; 0x67a <__divsf3+0x48>
     678:	7e c0       	rjmp	.+252    	; 0x776 <__divsf3+0x144>
     67a:	39 89       	ldd	r19, Y+17	; 0x11
     67c:	32 30       	cpi	r19, 0x02	; 2
     67e:	10 f4       	brcc	.+4      	; 0x684 <__divsf3+0x52>
     680:	b8 01       	movw	r22, r16
     682:	7c c0       	rjmp	.+248    	; 0x77c <__divsf3+0x14a>
     684:	8a 85       	ldd	r24, Y+10	; 0x0a
     686:	9a 89       	ldd	r25, Y+18	; 0x12
     688:	89 27       	eor	r24, r25
     68a:	8a 87       	std	Y+10, r24	; 0x0a
     68c:	24 30       	cpi	r18, 0x04	; 4
     68e:	11 f0       	breq	.+4      	; 0x694 <__divsf3+0x62>
     690:	22 30       	cpi	r18, 0x02	; 2
     692:	31 f4       	brne	.+12     	; 0x6a0 <__divsf3+0x6e>
     694:	23 17       	cp	r18, r19
     696:	09 f0       	breq	.+2      	; 0x69a <__divsf3+0x68>
     698:	6e c0       	rjmp	.+220    	; 0x776 <__divsf3+0x144>
     69a:	60 e6       	ldi	r22, 0x60	; 96
     69c:	70 e0       	ldi	r23, 0x00	; 0
     69e:	6e c0       	rjmp	.+220    	; 0x77c <__divsf3+0x14a>
     6a0:	34 30       	cpi	r19, 0x04	; 4
     6a2:	39 f4       	brne	.+14     	; 0x6b2 <__divsf3+0x80>
     6a4:	1d 86       	std	Y+13, r1	; 0x0d
     6a6:	1e 86       	std	Y+14, r1	; 0x0e
     6a8:	1f 86       	std	Y+15, r1	; 0x0f
     6aa:	18 8a       	std	Y+16, r1	; 0x10
     6ac:	1c 86       	std	Y+12, r1	; 0x0c
     6ae:	1b 86       	std	Y+11, r1	; 0x0b
     6b0:	04 c0       	rjmp	.+8      	; 0x6ba <__divsf3+0x88>
     6b2:	32 30       	cpi	r19, 0x02	; 2
     6b4:	21 f4       	brne	.+8      	; 0x6be <__divsf3+0x8c>
     6b6:	84 e0       	ldi	r24, 0x04	; 4
     6b8:	89 87       	std	Y+9, r24	; 0x09
     6ba:	b7 01       	movw	r22, r14
     6bc:	5f c0       	rjmp	.+190    	; 0x77c <__divsf3+0x14a>
     6be:	2b 85       	ldd	r18, Y+11	; 0x0b
     6c0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6c2:	8b 89       	ldd	r24, Y+19	; 0x13
     6c4:	9c 89       	ldd	r25, Y+20	; 0x14
     6c6:	28 1b       	sub	r18, r24
     6c8:	39 0b       	sbc	r19, r25
     6ca:	3c 87       	std	Y+12, r19	; 0x0c
     6cc:	2b 87       	std	Y+11, r18	; 0x0b
     6ce:	ed 84       	ldd	r14, Y+13	; 0x0d
     6d0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6d2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6d4:	18 89       	ldd	r17, Y+16	; 0x10
     6d6:	ad 88       	ldd	r10, Y+21	; 0x15
     6d8:	be 88       	ldd	r11, Y+22	; 0x16
     6da:	cf 88       	ldd	r12, Y+23	; 0x17
     6dc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6de:	ea 14       	cp	r14, r10
     6e0:	fb 04       	cpc	r15, r11
     6e2:	0c 05       	cpc	r16, r12
     6e4:	1d 05       	cpc	r17, r13
     6e6:	40 f4       	brcc	.+16     	; 0x6f8 <__divsf3+0xc6>
     6e8:	ee 0c       	add	r14, r14
     6ea:	ff 1c       	adc	r15, r15
     6ec:	00 1f       	adc	r16, r16
     6ee:	11 1f       	adc	r17, r17
     6f0:	21 50       	subi	r18, 0x01	; 1
     6f2:	30 40       	sbci	r19, 0x00	; 0
     6f4:	3c 87       	std	Y+12, r19	; 0x0c
     6f6:	2b 87       	std	Y+11, r18	; 0x0b
     6f8:	20 e0       	ldi	r18, 0x00	; 0
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	40 e0       	ldi	r20, 0x00	; 0
     6fe:	50 e0       	ldi	r21, 0x00	; 0
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	a0 e0       	ldi	r26, 0x00	; 0
     706:	b0 e4       	ldi	r27, 0x40	; 64
     708:	60 e0       	ldi	r22, 0x00	; 0
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	ea 14       	cp	r14, r10
     70e:	fb 04       	cpc	r15, r11
     710:	0c 05       	cpc	r16, r12
     712:	1d 05       	cpc	r17, r13
     714:	40 f0       	brcs	.+16     	; 0x726 <__divsf3+0xf4>
     716:	28 2b       	or	r18, r24
     718:	39 2b       	or	r19, r25
     71a:	4a 2b       	or	r20, r26
     71c:	5b 2b       	or	r21, r27
     71e:	ea 18       	sub	r14, r10
     720:	fb 08       	sbc	r15, r11
     722:	0c 09       	sbc	r16, r12
     724:	1d 09       	sbc	r17, r13
     726:	b6 95       	lsr	r27
     728:	a7 95       	ror	r26
     72a:	97 95       	ror	r25
     72c:	87 95       	ror	r24
     72e:	ee 0c       	add	r14, r14
     730:	ff 1c       	adc	r15, r15
     732:	00 1f       	adc	r16, r16
     734:	11 1f       	adc	r17, r17
     736:	6f 5f       	subi	r22, 0xFF	; 255
     738:	7f 4f       	sbci	r23, 0xFF	; 255
     73a:	6f 31       	cpi	r22, 0x1F	; 31
     73c:	71 05       	cpc	r23, r1
     73e:	31 f7       	brne	.-52     	; 0x70c <__divsf3+0xda>
     740:	da 01       	movw	r26, r20
     742:	c9 01       	movw	r24, r18
     744:	8f 77       	andi	r24, 0x7F	; 127
     746:	90 70       	andi	r25, 0x00	; 0
     748:	a0 70       	andi	r26, 0x00	; 0
     74a:	b0 70       	andi	r27, 0x00	; 0
     74c:	80 34       	cpi	r24, 0x40	; 64
     74e:	91 05       	cpc	r25, r1
     750:	a1 05       	cpc	r26, r1
     752:	b1 05       	cpc	r27, r1
     754:	61 f4       	brne	.+24     	; 0x76e <__divsf3+0x13c>
     756:	27 fd       	sbrc	r18, 7
     758:	0a c0       	rjmp	.+20     	; 0x76e <__divsf3+0x13c>
     75a:	e1 14       	cp	r14, r1
     75c:	f1 04       	cpc	r15, r1
     75e:	01 05       	cpc	r16, r1
     760:	11 05       	cpc	r17, r1
     762:	29 f0       	breq	.+10     	; 0x76e <__divsf3+0x13c>
     764:	20 5c       	subi	r18, 0xC0	; 192
     766:	3f 4f       	sbci	r19, 0xFF	; 255
     768:	4f 4f       	sbci	r20, 0xFF	; 255
     76a:	5f 4f       	sbci	r21, 0xFF	; 255
     76c:	20 78       	andi	r18, 0x80	; 128
     76e:	2d 87       	std	Y+13, r18	; 0x0d
     770:	3e 87       	std	Y+14, r19	; 0x0e
     772:	4f 87       	std	Y+15, r20	; 0x0f
     774:	58 8b       	std	Y+16, r21	; 0x10
     776:	be 01       	movw	r22, r28
     778:	67 5f       	subi	r22, 0xF7	; 247
     77a:	7f 4f       	sbci	r23, 0xFF	; 255
     77c:	cb 01       	movw	r24, r22
     77e:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     782:	68 96       	adiw	r28, 0x18	; 24
     784:	ea e0       	ldi	r30, 0x0A	; 10
     786:	0c 94 d6 0a 	jmp	0x15ac	; 0x15ac <__epilogue_restores__+0x10>

0000078a <__gtsf2>:
     78a:	a8 e1       	ldi	r26, 0x18	; 24
     78c:	b0 e0       	ldi	r27, 0x00	; 0
     78e:	eb ec       	ldi	r30, 0xCB	; 203
     790:	f3 e0       	ldi	r31, 0x03	; 3
     792:	0c 94 be 0a 	jmp	0x157c	; 0x157c <__prologue_saves__+0x18>
     796:	69 83       	std	Y+1, r22	; 0x01
     798:	7a 83       	std	Y+2, r23	; 0x02
     79a:	8b 83       	std	Y+3, r24	; 0x03
     79c:	9c 83       	std	Y+4, r25	; 0x04
     79e:	2d 83       	std	Y+5, r18	; 0x05
     7a0:	3e 83       	std	Y+6, r19	; 0x06
     7a2:	4f 83       	std	Y+7, r20	; 0x07
     7a4:	58 87       	std	Y+8, r21	; 0x08
     7a6:	89 e0       	ldi	r24, 0x09	; 9
     7a8:	e8 2e       	mov	r14, r24
     7aa:	f1 2c       	mov	r15, r1
     7ac:	ec 0e       	add	r14, r28
     7ae:	fd 1e       	adc	r15, r29
     7b0:	ce 01       	movw	r24, r28
     7b2:	01 96       	adiw	r24, 0x01	; 1
     7b4:	b7 01       	movw	r22, r14
     7b6:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     7ba:	8e 01       	movw	r16, r28
     7bc:	0f 5e       	subi	r16, 0xEF	; 239
     7be:	1f 4f       	sbci	r17, 0xFF	; 255
     7c0:	ce 01       	movw	r24, r28
     7c2:	05 96       	adiw	r24, 0x05	; 5
     7c4:	b8 01       	movw	r22, r16
     7c6:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     7ca:	89 85       	ldd	r24, Y+9	; 0x09
     7cc:	82 30       	cpi	r24, 0x02	; 2
     7ce:	40 f0       	brcs	.+16     	; 0x7e0 <__gtsf2+0x56>
     7d0:	89 89       	ldd	r24, Y+17	; 0x11
     7d2:	82 30       	cpi	r24, 0x02	; 2
     7d4:	28 f0       	brcs	.+10     	; 0x7e0 <__gtsf2+0x56>
     7d6:	c7 01       	movw	r24, r14
     7d8:	b8 01       	movw	r22, r16
     7da:	0e 94 be 06 	call	0xd7c	; 0xd7c <__fpcmp_parts_f>
     7de:	01 c0       	rjmp	.+2      	; 0x7e2 <__gtsf2+0x58>
     7e0:	8f ef       	ldi	r24, 0xFF	; 255
     7e2:	68 96       	adiw	r28, 0x18	; 24
     7e4:	e6 e0       	ldi	r30, 0x06	; 6
     7e6:	0c 94 da 0a 	jmp	0x15b4	; 0x15b4 <__epilogue_restores__+0x18>

000007ea <__gesf2>:
     7ea:	a8 e1       	ldi	r26, 0x18	; 24
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 be 0a 	jmp	0x157c	; 0x157c <__prologue_saves__+0x18>
     7f6:	69 83       	std	Y+1, r22	; 0x01
     7f8:	7a 83       	std	Y+2, r23	; 0x02
     7fa:	8b 83       	std	Y+3, r24	; 0x03
     7fc:	9c 83       	std	Y+4, r25	; 0x04
     7fe:	2d 83       	std	Y+5, r18	; 0x05
     800:	3e 83       	std	Y+6, r19	; 0x06
     802:	4f 83       	std	Y+7, r20	; 0x07
     804:	58 87       	std	Y+8, r21	; 0x08
     806:	89 e0       	ldi	r24, 0x09	; 9
     808:	e8 2e       	mov	r14, r24
     80a:	f1 2c       	mov	r15, r1
     80c:	ec 0e       	add	r14, r28
     80e:	fd 1e       	adc	r15, r29
     810:	ce 01       	movw	r24, r28
     812:	01 96       	adiw	r24, 0x01	; 1
     814:	b7 01       	movw	r22, r14
     816:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     81a:	8e 01       	movw	r16, r28
     81c:	0f 5e       	subi	r16, 0xEF	; 239
     81e:	1f 4f       	sbci	r17, 0xFF	; 255
     820:	ce 01       	movw	r24, r28
     822:	05 96       	adiw	r24, 0x05	; 5
     824:	b8 01       	movw	r22, r16
     826:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     82a:	89 85       	ldd	r24, Y+9	; 0x09
     82c:	82 30       	cpi	r24, 0x02	; 2
     82e:	40 f0       	brcs	.+16     	; 0x840 <__gesf2+0x56>
     830:	89 89       	ldd	r24, Y+17	; 0x11
     832:	82 30       	cpi	r24, 0x02	; 2
     834:	28 f0       	brcs	.+10     	; 0x840 <__gesf2+0x56>
     836:	c7 01       	movw	r24, r14
     838:	b8 01       	movw	r22, r16
     83a:	0e 94 be 06 	call	0xd7c	; 0xd7c <__fpcmp_parts_f>
     83e:	01 c0       	rjmp	.+2      	; 0x842 <__gesf2+0x58>
     840:	8f ef       	ldi	r24, 0xFF	; 255
     842:	68 96       	adiw	r28, 0x18	; 24
     844:	e6 e0       	ldi	r30, 0x06	; 6
     846:	0c 94 da 0a 	jmp	0x15b4	; 0x15b4 <__epilogue_restores__+0x18>

0000084a <__ltsf2>:
     84a:	a8 e1       	ldi	r26, 0x18	; 24
     84c:	b0 e0       	ldi	r27, 0x00	; 0
     84e:	eb e2       	ldi	r30, 0x2B	; 43
     850:	f4 e0       	ldi	r31, 0x04	; 4
     852:	0c 94 be 0a 	jmp	0x157c	; 0x157c <__prologue_saves__+0x18>
     856:	69 83       	std	Y+1, r22	; 0x01
     858:	7a 83       	std	Y+2, r23	; 0x02
     85a:	8b 83       	std	Y+3, r24	; 0x03
     85c:	9c 83       	std	Y+4, r25	; 0x04
     85e:	2d 83       	std	Y+5, r18	; 0x05
     860:	3e 83       	std	Y+6, r19	; 0x06
     862:	4f 83       	std	Y+7, r20	; 0x07
     864:	58 87       	std	Y+8, r21	; 0x08
     866:	89 e0       	ldi	r24, 0x09	; 9
     868:	e8 2e       	mov	r14, r24
     86a:	f1 2c       	mov	r15, r1
     86c:	ec 0e       	add	r14, r28
     86e:	fd 1e       	adc	r15, r29
     870:	ce 01       	movw	r24, r28
     872:	01 96       	adiw	r24, 0x01	; 1
     874:	b7 01       	movw	r22, r14
     876:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     87a:	8e 01       	movw	r16, r28
     87c:	0f 5e       	subi	r16, 0xEF	; 239
     87e:	1f 4f       	sbci	r17, 0xFF	; 255
     880:	ce 01       	movw	r24, r28
     882:	05 96       	adiw	r24, 0x05	; 5
     884:	b8 01       	movw	r22, r16
     886:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     88a:	89 85       	ldd	r24, Y+9	; 0x09
     88c:	82 30       	cpi	r24, 0x02	; 2
     88e:	40 f0       	brcs	.+16     	; 0x8a0 <__stack+0x41>
     890:	89 89       	ldd	r24, Y+17	; 0x11
     892:	82 30       	cpi	r24, 0x02	; 2
     894:	28 f0       	brcs	.+10     	; 0x8a0 <__stack+0x41>
     896:	c7 01       	movw	r24, r14
     898:	b8 01       	movw	r22, r16
     89a:	0e 94 be 06 	call	0xd7c	; 0xd7c <__fpcmp_parts_f>
     89e:	01 c0       	rjmp	.+2      	; 0x8a2 <__stack+0x43>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	68 96       	adiw	r28, 0x18	; 24
     8a4:	e6 e0       	ldi	r30, 0x06	; 6
     8a6:	0c 94 da 0a 	jmp	0x15b4	; 0x15b4 <__epilogue_restores__+0x18>

000008aa <__fixsfsi>:
     8aa:	ac e0       	ldi	r26, 0x0C	; 12
     8ac:	b0 e0       	ldi	r27, 0x00	; 0
     8ae:	eb e5       	ldi	r30, 0x5B	; 91
     8b0:	f4 e0       	ldi	r31, 0x04	; 4
     8b2:	0c 94 c2 0a 	jmp	0x1584	; 0x1584 <__prologue_saves__+0x20>
     8b6:	69 83       	std	Y+1, r22	; 0x01
     8b8:	7a 83       	std	Y+2, r23	; 0x02
     8ba:	8b 83       	std	Y+3, r24	; 0x03
     8bc:	9c 83       	std	Y+4, r25	; 0x04
     8be:	ce 01       	movw	r24, r28
     8c0:	01 96       	adiw	r24, 0x01	; 1
     8c2:	be 01       	movw	r22, r28
     8c4:	6b 5f       	subi	r22, 0xFB	; 251
     8c6:	7f 4f       	sbci	r23, 0xFF	; 255
     8c8:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     8cc:	8d 81       	ldd	r24, Y+5	; 0x05
     8ce:	82 30       	cpi	r24, 0x02	; 2
     8d0:	61 f1       	breq	.+88     	; 0x92a <__fixsfsi+0x80>
     8d2:	82 30       	cpi	r24, 0x02	; 2
     8d4:	50 f1       	brcs	.+84     	; 0x92a <__fixsfsi+0x80>
     8d6:	84 30       	cpi	r24, 0x04	; 4
     8d8:	21 f4       	brne	.+8      	; 0x8e2 <__fixsfsi+0x38>
     8da:	8e 81       	ldd	r24, Y+6	; 0x06
     8dc:	88 23       	and	r24, r24
     8de:	51 f1       	breq	.+84     	; 0x934 <__fixsfsi+0x8a>
     8e0:	2e c0       	rjmp	.+92     	; 0x93e <__fixsfsi+0x94>
     8e2:	2f 81       	ldd	r18, Y+7	; 0x07
     8e4:	38 85       	ldd	r19, Y+8	; 0x08
     8e6:	37 fd       	sbrc	r19, 7
     8e8:	20 c0       	rjmp	.+64     	; 0x92a <__fixsfsi+0x80>
     8ea:	6e 81       	ldd	r22, Y+6	; 0x06
     8ec:	2f 31       	cpi	r18, 0x1F	; 31
     8ee:	31 05       	cpc	r19, r1
     8f0:	1c f0       	brlt	.+6      	; 0x8f8 <__fixsfsi+0x4e>
     8f2:	66 23       	and	r22, r22
     8f4:	f9 f0       	breq	.+62     	; 0x934 <__fixsfsi+0x8a>
     8f6:	23 c0       	rjmp	.+70     	; 0x93e <__fixsfsi+0x94>
     8f8:	8e e1       	ldi	r24, 0x1E	; 30
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	82 1b       	sub	r24, r18
     8fe:	93 0b       	sbc	r25, r19
     900:	29 85       	ldd	r18, Y+9	; 0x09
     902:	3a 85       	ldd	r19, Y+10	; 0x0a
     904:	4b 85       	ldd	r20, Y+11	; 0x0b
     906:	5c 85       	ldd	r21, Y+12	; 0x0c
     908:	04 c0       	rjmp	.+8      	; 0x912 <__fixsfsi+0x68>
     90a:	56 95       	lsr	r21
     90c:	47 95       	ror	r20
     90e:	37 95       	ror	r19
     910:	27 95       	ror	r18
     912:	8a 95       	dec	r24
     914:	d2 f7       	brpl	.-12     	; 0x90a <__fixsfsi+0x60>
     916:	66 23       	and	r22, r22
     918:	b1 f0       	breq	.+44     	; 0x946 <__fixsfsi+0x9c>
     91a:	50 95       	com	r21
     91c:	40 95       	com	r20
     91e:	30 95       	com	r19
     920:	21 95       	neg	r18
     922:	3f 4f       	sbci	r19, 0xFF	; 255
     924:	4f 4f       	sbci	r20, 0xFF	; 255
     926:	5f 4f       	sbci	r21, 0xFF	; 255
     928:	0e c0       	rjmp	.+28     	; 0x946 <__fixsfsi+0x9c>
     92a:	20 e0       	ldi	r18, 0x00	; 0
     92c:	30 e0       	ldi	r19, 0x00	; 0
     92e:	40 e0       	ldi	r20, 0x00	; 0
     930:	50 e0       	ldi	r21, 0x00	; 0
     932:	09 c0       	rjmp	.+18     	; 0x946 <__fixsfsi+0x9c>
     934:	2f ef       	ldi	r18, 0xFF	; 255
     936:	3f ef       	ldi	r19, 0xFF	; 255
     938:	4f ef       	ldi	r20, 0xFF	; 255
     93a:	5f e7       	ldi	r21, 0x7F	; 127
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__fixsfsi+0x9c>
     93e:	20 e0       	ldi	r18, 0x00	; 0
     940:	30 e0       	ldi	r19, 0x00	; 0
     942:	40 e0       	ldi	r20, 0x00	; 0
     944:	50 e8       	ldi	r21, 0x80	; 128
     946:	b9 01       	movw	r22, r18
     948:	ca 01       	movw	r24, r20
     94a:	2c 96       	adiw	r28, 0x0c	; 12
     94c:	e2 e0       	ldi	r30, 0x02	; 2
     94e:	0c 94 de 0a 	jmp	0x15bc	; 0x15bc <__epilogue_restores__+0x20>

00000952 <__floatunsisf>:
     952:	a8 e0       	ldi	r26, 0x08	; 8
     954:	b0 e0       	ldi	r27, 0x00	; 0
     956:	ef ea       	ldi	r30, 0xAF	; 175
     958:	f4 e0       	ldi	r31, 0x04	; 4
     95a:	0c 94 ba 0a 	jmp	0x1574	; 0x1574 <__prologue_saves__+0x10>
     95e:	7b 01       	movw	r14, r22
     960:	8c 01       	movw	r16, r24
     962:	61 15       	cp	r22, r1
     964:	71 05       	cpc	r23, r1
     966:	81 05       	cpc	r24, r1
     968:	91 05       	cpc	r25, r1
     96a:	19 f4       	brne	.+6      	; 0x972 <__floatunsisf+0x20>
     96c:	82 e0       	ldi	r24, 0x02	; 2
     96e:	89 83       	std	Y+1, r24	; 0x01
     970:	60 c0       	rjmp	.+192    	; 0xa32 <__floatunsisf+0xe0>
     972:	83 e0       	ldi	r24, 0x03	; 3
     974:	89 83       	std	Y+1, r24	; 0x01
     976:	8e e1       	ldi	r24, 0x1E	; 30
     978:	c8 2e       	mov	r12, r24
     97a:	d1 2c       	mov	r13, r1
     97c:	dc 82       	std	Y+4, r13	; 0x04
     97e:	cb 82       	std	Y+3, r12	; 0x03
     980:	ed 82       	std	Y+5, r14	; 0x05
     982:	fe 82       	std	Y+6, r15	; 0x06
     984:	0f 83       	std	Y+7, r16	; 0x07
     986:	18 87       	std	Y+8, r17	; 0x08
     988:	c8 01       	movw	r24, r16
     98a:	b7 01       	movw	r22, r14
     98c:	0e 94 22 05 	call	0xa44	; 0xa44 <__clzsi2>
     990:	fc 01       	movw	r30, r24
     992:	31 97       	sbiw	r30, 0x01	; 1
     994:	f7 ff       	sbrs	r31, 7
     996:	3b c0       	rjmp	.+118    	; 0xa0e <__floatunsisf+0xbc>
     998:	22 27       	eor	r18, r18
     99a:	33 27       	eor	r19, r19
     99c:	2e 1b       	sub	r18, r30
     99e:	3f 0b       	sbc	r19, r31
     9a0:	57 01       	movw	r10, r14
     9a2:	68 01       	movw	r12, r16
     9a4:	02 2e       	mov	r0, r18
     9a6:	04 c0       	rjmp	.+8      	; 0x9b0 <__floatunsisf+0x5e>
     9a8:	d6 94       	lsr	r13
     9aa:	c7 94       	ror	r12
     9ac:	b7 94       	ror	r11
     9ae:	a7 94       	ror	r10
     9b0:	0a 94       	dec	r0
     9b2:	d2 f7       	brpl	.-12     	; 0x9a8 <__floatunsisf+0x56>
     9b4:	40 e0       	ldi	r20, 0x00	; 0
     9b6:	50 e0       	ldi	r21, 0x00	; 0
     9b8:	60 e0       	ldi	r22, 0x00	; 0
     9ba:	70 e0       	ldi	r23, 0x00	; 0
     9bc:	81 e0       	ldi	r24, 0x01	; 1
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	a0 e0       	ldi	r26, 0x00	; 0
     9c2:	b0 e0       	ldi	r27, 0x00	; 0
     9c4:	04 c0       	rjmp	.+8      	; 0x9ce <__floatunsisf+0x7c>
     9c6:	88 0f       	add	r24, r24
     9c8:	99 1f       	adc	r25, r25
     9ca:	aa 1f       	adc	r26, r26
     9cc:	bb 1f       	adc	r27, r27
     9ce:	2a 95       	dec	r18
     9d0:	d2 f7       	brpl	.-12     	; 0x9c6 <__floatunsisf+0x74>
     9d2:	01 97       	sbiw	r24, 0x01	; 1
     9d4:	a1 09       	sbc	r26, r1
     9d6:	b1 09       	sbc	r27, r1
     9d8:	8e 21       	and	r24, r14
     9da:	9f 21       	and	r25, r15
     9dc:	a0 23       	and	r26, r16
     9de:	b1 23       	and	r27, r17
     9e0:	00 97       	sbiw	r24, 0x00	; 0
     9e2:	a1 05       	cpc	r26, r1
     9e4:	b1 05       	cpc	r27, r1
     9e6:	21 f0       	breq	.+8      	; 0x9f0 <__floatunsisf+0x9e>
     9e8:	41 e0       	ldi	r20, 0x01	; 1
     9ea:	50 e0       	ldi	r21, 0x00	; 0
     9ec:	60 e0       	ldi	r22, 0x00	; 0
     9ee:	70 e0       	ldi	r23, 0x00	; 0
     9f0:	4a 29       	or	r20, r10
     9f2:	5b 29       	or	r21, r11
     9f4:	6c 29       	or	r22, r12
     9f6:	7d 29       	or	r23, r13
     9f8:	4d 83       	std	Y+5, r20	; 0x05
     9fa:	5e 83       	std	Y+6, r21	; 0x06
     9fc:	6f 83       	std	Y+7, r22	; 0x07
     9fe:	78 87       	std	Y+8, r23	; 0x08
     a00:	8e e1       	ldi	r24, 0x1E	; 30
     a02:	90 e0       	ldi	r25, 0x00	; 0
     a04:	8e 1b       	sub	r24, r30
     a06:	9f 0b       	sbc	r25, r31
     a08:	9c 83       	std	Y+4, r25	; 0x04
     a0a:	8b 83       	std	Y+3, r24	; 0x03
     a0c:	12 c0       	rjmp	.+36     	; 0xa32 <__floatunsisf+0xe0>
     a0e:	30 97       	sbiw	r30, 0x00	; 0
     a10:	81 f0       	breq	.+32     	; 0xa32 <__floatunsisf+0xe0>
     a12:	0e 2e       	mov	r0, r30
     a14:	04 c0       	rjmp	.+8      	; 0xa1e <__floatunsisf+0xcc>
     a16:	ee 0c       	add	r14, r14
     a18:	ff 1c       	adc	r15, r15
     a1a:	00 1f       	adc	r16, r16
     a1c:	11 1f       	adc	r17, r17
     a1e:	0a 94       	dec	r0
     a20:	d2 f7       	brpl	.-12     	; 0xa16 <__floatunsisf+0xc4>
     a22:	ed 82       	std	Y+5, r14	; 0x05
     a24:	fe 82       	std	Y+6, r15	; 0x06
     a26:	0f 83       	std	Y+7, r16	; 0x07
     a28:	18 87       	std	Y+8, r17	; 0x08
     a2a:	ce 1a       	sub	r12, r30
     a2c:	df 0a       	sbc	r13, r31
     a2e:	dc 82       	std	Y+4, r13	; 0x04
     a30:	cb 82       	std	Y+3, r12	; 0x03
     a32:	1a 82       	std	Y+2, r1	; 0x02
     a34:	ce 01       	movw	r24, r28
     a36:	01 96       	adiw	r24, 0x01	; 1
     a38:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     a3c:	28 96       	adiw	r28, 0x08	; 8
     a3e:	ea e0       	ldi	r30, 0x0A	; 10
     a40:	0c 94 d6 0a 	jmp	0x15ac	; 0x15ac <__epilogue_restores__+0x10>

00000a44 <__clzsi2>:
     a44:	ef 92       	push	r14
     a46:	ff 92       	push	r15
     a48:	0f 93       	push	r16
     a4a:	1f 93       	push	r17
     a4c:	7b 01       	movw	r14, r22
     a4e:	8c 01       	movw	r16, r24
     a50:	80 e0       	ldi	r24, 0x00	; 0
     a52:	e8 16       	cp	r14, r24
     a54:	80 e0       	ldi	r24, 0x00	; 0
     a56:	f8 06       	cpc	r15, r24
     a58:	81 e0       	ldi	r24, 0x01	; 1
     a5a:	08 07       	cpc	r16, r24
     a5c:	80 e0       	ldi	r24, 0x00	; 0
     a5e:	18 07       	cpc	r17, r24
     a60:	88 f4       	brcc	.+34     	; 0xa84 <__clzsi2+0x40>
     a62:	8f ef       	ldi	r24, 0xFF	; 255
     a64:	e8 16       	cp	r14, r24
     a66:	f1 04       	cpc	r15, r1
     a68:	01 05       	cpc	r16, r1
     a6a:	11 05       	cpc	r17, r1
     a6c:	31 f0       	breq	.+12     	; 0xa7a <__clzsi2+0x36>
     a6e:	28 f0       	brcs	.+10     	; 0xa7a <__clzsi2+0x36>
     a70:	88 e0       	ldi	r24, 0x08	; 8
     a72:	90 e0       	ldi	r25, 0x00	; 0
     a74:	a0 e0       	ldi	r26, 0x00	; 0
     a76:	b0 e0       	ldi	r27, 0x00	; 0
     a78:	17 c0       	rjmp	.+46     	; 0xaa8 <__clzsi2+0x64>
     a7a:	80 e0       	ldi	r24, 0x00	; 0
     a7c:	90 e0       	ldi	r25, 0x00	; 0
     a7e:	a0 e0       	ldi	r26, 0x00	; 0
     a80:	b0 e0       	ldi	r27, 0x00	; 0
     a82:	12 c0       	rjmp	.+36     	; 0xaa8 <__clzsi2+0x64>
     a84:	80 e0       	ldi	r24, 0x00	; 0
     a86:	e8 16       	cp	r14, r24
     a88:	80 e0       	ldi	r24, 0x00	; 0
     a8a:	f8 06       	cpc	r15, r24
     a8c:	80 e0       	ldi	r24, 0x00	; 0
     a8e:	08 07       	cpc	r16, r24
     a90:	81 e0       	ldi	r24, 0x01	; 1
     a92:	18 07       	cpc	r17, r24
     a94:	28 f0       	brcs	.+10     	; 0xaa0 <__clzsi2+0x5c>
     a96:	88 e1       	ldi	r24, 0x18	; 24
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	a0 e0       	ldi	r26, 0x00	; 0
     a9c:	b0 e0       	ldi	r27, 0x00	; 0
     a9e:	04 c0       	rjmp	.+8      	; 0xaa8 <__clzsi2+0x64>
     aa0:	80 e1       	ldi	r24, 0x10	; 16
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	a0 e0       	ldi	r26, 0x00	; 0
     aa6:	b0 e0       	ldi	r27, 0x00	; 0
     aa8:	20 e2       	ldi	r18, 0x20	; 32
     aaa:	30 e0       	ldi	r19, 0x00	; 0
     aac:	40 e0       	ldi	r20, 0x00	; 0
     aae:	50 e0       	ldi	r21, 0x00	; 0
     ab0:	28 1b       	sub	r18, r24
     ab2:	39 0b       	sbc	r19, r25
     ab4:	4a 0b       	sbc	r20, r26
     ab6:	5b 0b       	sbc	r21, r27
     ab8:	04 c0       	rjmp	.+8      	; 0xac2 <__clzsi2+0x7e>
     aba:	16 95       	lsr	r17
     abc:	07 95       	ror	r16
     abe:	f7 94       	ror	r15
     ac0:	e7 94       	ror	r14
     ac2:	8a 95       	dec	r24
     ac4:	d2 f7       	brpl	.-12     	; 0xaba <__clzsi2+0x76>
     ac6:	f7 01       	movw	r30, r14
     ac8:	e8 59       	subi	r30, 0x98	; 152
     aca:	ff 4f       	sbci	r31, 0xFF	; 255
     acc:	80 81       	ld	r24, Z
     ace:	28 1b       	sub	r18, r24
     ad0:	31 09       	sbc	r19, r1
     ad2:	41 09       	sbc	r20, r1
     ad4:	51 09       	sbc	r21, r1
     ad6:	c9 01       	movw	r24, r18
     ad8:	1f 91       	pop	r17
     ada:	0f 91       	pop	r16
     adc:	ff 90       	pop	r15
     ade:	ef 90       	pop	r14
     ae0:	08 95       	ret

00000ae2 <__pack_f>:
     ae2:	df 92       	push	r13
     ae4:	ef 92       	push	r14
     ae6:	ff 92       	push	r15
     ae8:	0f 93       	push	r16
     aea:	1f 93       	push	r17
     aec:	fc 01       	movw	r30, r24
     aee:	e4 80       	ldd	r14, Z+4	; 0x04
     af0:	f5 80       	ldd	r15, Z+5	; 0x05
     af2:	06 81       	ldd	r16, Z+6	; 0x06
     af4:	17 81       	ldd	r17, Z+7	; 0x07
     af6:	d1 80       	ldd	r13, Z+1	; 0x01
     af8:	80 81       	ld	r24, Z
     afa:	82 30       	cpi	r24, 0x02	; 2
     afc:	48 f4       	brcc	.+18     	; 0xb10 <__pack_f+0x2e>
     afe:	80 e0       	ldi	r24, 0x00	; 0
     b00:	90 e0       	ldi	r25, 0x00	; 0
     b02:	a0 e1       	ldi	r26, 0x10	; 16
     b04:	b0 e0       	ldi	r27, 0x00	; 0
     b06:	e8 2a       	or	r14, r24
     b08:	f9 2a       	or	r15, r25
     b0a:	0a 2b       	or	r16, r26
     b0c:	1b 2b       	or	r17, r27
     b0e:	a5 c0       	rjmp	.+330    	; 0xc5a <__pack_f+0x178>
     b10:	84 30       	cpi	r24, 0x04	; 4
     b12:	09 f4       	brne	.+2      	; 0xb16 <__pack_f+0x34>
     b14:	9f c0       	rjmp	.+318    	; 0xc54 <__pack_f+0x172>
     b16:	82 30       	cpi	r24, 0x02	; 2
     b18:	21 f4       	brne	.+8      	; 0xb22 <__pack_f+0x40>
     b1a:	ee 24       	eor	r14, r14
     b1c:	ff 24       	eor	r15, r15
     b1e:	87 01       	movw	r16, r14
     b20:	05 c0       	rjmp	.+10     	; 0xb2c <__pack_f+0x4a>
     b22:	e1 14       	cp	r14, r1
     b24:	f1 04       	cpc	r15, r1
     b26:	01 05       	cpc	r16, r1
     b28:	11 05       	cpc	r17, r1
     b2a:	19 f4       	brne	.+6      	; 0xb32 <__pack_f+0x50>
     b2c:	e0 e0       	ldi	r30, 0x00	; 0
     b2e:	f0 e0       	ldi	r31, 0x00	; 0
     b30:	96 c0       	rjmp	.+300    	; 0xc5e <__pack_f+0x17c>
     b32:	62 81       	ldd	r22, Z+2	; 0x02
     b34:	73 81       	ldd	r23, Z+3	; 0x03
     b36:	9f ef       	ldi	r25, 0xFF	; 255
     b38:	62 38       	cpi	r22, 0x82	; 130
     b3a:	79 07       	cpc	r23, r25
     b3c:	0c f0       	brlt	.+2      	; 0xb40 <__pack_f+0x5e>
     b3e:	5b c0       	rjmp	.+182    	; 0xbf6 <__pack_f+0x114>
     b40:	22 e8       	ldi	r18, 0x82	; 130
     b42:	3f ef       	ldi	r19, 0xFF	; 255
     b44:	26 1b       	sub	r18, r22
     b46:	37 0b       	sbc	r19, r23
     b48:	2a 31       	cpi	r18, 0x1A	; 26
     b4a:	31 05       	cpc	r19, r1
     b4c:	2c f0       	brlt	.+10     	; 0xb58 <__pack_f+0x76>
     b4e:	20 e0       	ldi	r18, 0x00	; 0
     b50:	30 e0       	ldi	r19, 0x00	; 0
     b52:	40 e0       	ldi	r20, 0x00	; 0
     b54:	50 e0       	ldi	r21, 0x00	; 0
     b56:	2a c0       	rjmp	.+84     	; 0xbac <__pack_f+0xca>
     b58:	b8 01       	movw	r22, r16
     b5a:	a7 01       	movw	r20, r14
     b5c:	02 2e       	mov	r0, r18
     b5e:	04 c0       	rjmp	.+8      	; 0xb68 <__pack_f+0x86>
     b60:	76 95       	lsr	r23
     b62:	67 95       	ror	r22
     b64:	57 95       	ror	r21
     b66:	47 95       	ror	r20
     b68:	0a 94       	dec	r0
     b6a:	d2 f7       	brpl	.-12     	; 0xb60 <__pack_f+0x7e>
     b6c:	81 e0       	ldi	r24, 0x01	; 1
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	a0 e0       	ldi	r26, 0x00	; 0
     b72:	b0 e0       	ldi	r27, 0x00	; 0
     b74:	04 c0       	rjmp	.+8      	; 0xb7e <__pack_f+0x9c>
     b76:	88 0f       	add	r24, r24
     b78:	99 1f       	adc	r25, r25
     b7a:	aa 1f       	adc	r26, r26
     b7c:	bb 1f       	adc	r27, r27
     b7e:	2a 95       	dec	r18
     b80:	d2 f7       	brpl	.-12     	; 0xb76 <__pack_f+0x94>
     b82:	01 97       	sbiw	r24, 0x01	; 1
     b84:	a1 09       	sbc	r26, r1
     b86:	b1 09       	sbc	r27, r1
     b88:	8e 21       	and	r24, r14
     b8a:	9f 21       	and	r25, r15
     b8c:	a0 23       	and	r26, r16
     b8e:	b1 23       	and	r27, r17
     b90:	00 97       	sbiw	r24, 0x00	; 0
     b92:	a1 05       	cpc	r26, r1
     b94:	b1 05       	cpc	r27, r1
     b96:	21 f0       	breq	.+8      	; 0xba0 <__pack_f+0xbe>
     b98:	81 e0       	ldi	r24, 0x01	; 1
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	a0 e0       	ldi	r26, 0x00	; 0
     b9e:	b0 e0       	ldi	r27, 0x00	; 0
     ba0:	9a 01       	movw	r18, r20
     ba2:	ab 01       	movw	r20, r22
     ba4:	28 2b       	or	r18, r24
     ba6:	39 2b       	or	r19, r25
     ba8:	4a 2b       	or	r20, r26
     baa:	5b 2b       	or	r21, r27
     bac:	da 01       	movw	r26, r20
     bae:	c9 01       	movw	r24, r18
     bb0:	8f 77       	andi	r24, 0x7F	; 127
     bb2:	90 70       	andi	r25, 0x00	; 0
     bb4:	a0 70       	andi	r26, 0x00	; 0
     bb6:	b0 70       	andi	r27, 0x00	; 0
     bb8:	80 34       	cpi	r24, 0x40	; 64
     bba:	91 05       	cpc	r25, r1
     bbc:	a1 05       	cpc	r26, r1
     bbe:	b1 05       	cpc	r27, r1
     bc0:	39 f4       	brne	.+14     	; 0xbd0 <__pack_f+0xee>
     bc2:	27 ff       	sbrs	r18, 7
     bc4:	09 c0       	rjmp	.+18     	; 0xbd8 <__pack_f+0xf6>
     bc6:	20 5c       	subi	r18, 0xC0	; 192
     bc8:	3f 4f       	sbci	r19, 0xFF	; 255
     bca:	4f 4f       	sbci	r20, 0xFF	; 255
     bcc:	5f 4f       	sbci	r21, 0xFF	; 255
     bce:	04 c0       	rjmp	.+8      	; 0xbd8 <__pack_f+0xf6>
     bd0:	21 5c       	subi	r18, 0xC1	; 193
     bd2:	3f 4f       	sbci	r19, 0xFF	; 255
     bd4:	4f 4f       	sbci	r20, 0xFF	; 255
     bd6:	5f 4f       	sbci	r21, 0xFF	; 255
     bd8:	e0 e0       	ldi	r30, 0x00	; 0
     bda:	f0 e0       	ldi	r31, 0x00	; 0
     bdc:	20 30       	cpi	r18, 0x00	; 0
     bde:	a0 e0       	ldi	r26, 0x00	; 0
     be0:	3a 07       	cpc	r19, r26
     be2:	a0 e0       	ldi	r26, 0x00	; 0
     be4:	4a 07       	cpc	r20, r26
     be6:	a0 e4       	ldi	r26, 0x40	; 64
     be8:	5a 07       	cpc	r21, r26
     bea:	10 f0       	brcs	.+4      	; 0xbf0 <__pack_f+0x10e>
     bec:	e1 e0       	ldi	r30, 0x01	; 1
     bee:	f0 e0       	ldi	r31, 0x00	; 0
     bf0:	79 01       	movw	r14, r18
     bf2:	8a 01       	movw	r16, r20
     bf4:	27 c0       	rjmp	.+78     	; 0xc44 <__pack_f+0x162>
     bf6:	60 38       	cpi	r22, 0x80	; 128
     bf8:	71 05       	cpc	r23, r1
     bfa:	64 f5       	brge	.+88     	; 0xc54 <__pack_f+0x172>
     bfc:	fb 01       	movw	r30, r22
     bfe:	e1 58       	subi	r30, 0x81	; 129
     c00:	ff 4f       	sbci	r31, 0xFF	; 255
     c02:	d8 01       	movw	r26, r16
     c04:	c7 01       	movw	r24, r14
     c06:	8f 77       	andi	r24, 0x7F	; 127
     c08:	90 70       	andi	r25, 0x00	; 0
     c0a:	a0 70       	andi	r26, 0x00	; 0
     c0c:	b0 70       	andi	r27, 0x00	; 0
     c0e:	80 34       	cpi	r24, 0x40	; 64
     c10:	91 05       	cpc	r25, r1
     c12:	a1 05       	cpc	r26, r1
     c14:	b1 05       	cpc	r27, r1
     c16:	39 f4       	brne	.+14     	; 0xc26 <__pack_f+0x144>
     c18:	e7 fe       	sbrs	r14, 7
     c1a:	0d c0       	rjmp	.+26     	; 0xc36 <__pack_f+0x154>
     c1c:	80 e4       	ldi	r24, 0x40	; 64
     c1e:	90 e0       	ldi	r25, 0x00	; 0
     c20:	a0 e0       	ldi	r26, 0x00	; 0
     c22:	b0 e0       	ldi	r27, 0x00	; 0
     c24:	04 c0       	rjmp	.+8      	; 0xc2e <__pack_f+0x14c>
     c26:	8f e3       	ldi	r24, 0x3F	; 63
     c28:	90 e0       	ldi	r25, 0x00	; 0
     c2a:	a0 e0       	ldi	r26, 0x00	; 0
     c2c:	b0 e0       	ldi	r27, 0x00	; 0
     c2e:	e8 0e       	add	r14, r24
     c30:	f9 1e       	adc	r15, r25
     c32:	0a 1f       	adc	r16, r26
     c34:	1b 1f       	adc	r17, r27
     c36:	17 ff       	sbrs	r17, 7
     c38:	05 c0       	rjmp	.+10     	; 0xc44 <__pack_f+0x162>
     c3a:	16 95       	lsr	r17
     c3c:	07 95       	ror	r16
     c3e:	f7 94       	ror	r15
     c40:	e7 94       	ror	r14
     c42:	31 96       	adiw	r30, 0x01	; 1
     c44:	87 e0       	ldi	r24, 0x07	; 7
     c46:	16 95       	lsr	r17
     c48:	07 95       	ror	r16
     c4a:	f7 94       	ror	r15
     c4c:	e7 94       	ror	r14
     c4e:	8a 95       	dec	r24
     c50:	d1 f7       	brne	.-12     	; 0xc46 <__pack_f+0x164>
     c52:	05 c0       	rjmp	.+10     	; 0xc5e <__pack_f+0x17c>
     c54:	ee 24       	eor	r14, r14
     c56:	ff 24       	eor	r15, r15
     c58:	87 01       	movw	r16, r14
     c5a:	ef ef       	ldi	r30, 0xFF	; 255
     c5c:	f0 e0       	ldi	r31, 0x00	; 0
     c5e:	6e 2f       	mov	r22, r30
     c60:	67 95       	ror	r22
     c62:	66 27       	eor	r22, r22
     c64:	67 95       	ror	r22
     c66:	90 2f       	mov	r25, r16
     c68:	9f 77       	andi	r25, 0x7F	; 127
     c6a:	d7 94       	ror	r13
     c6c:	dd 24       	eor	r13, r13
     c6e:	d7 94       	ror	r13
     c70:	8e 2f       	mov	r24, r30
     c72:	86 95       	lsr	r24
     c74:	49 2f       	mov	r20, r25
     c76:	46 2b       	or	r20, r22
     c78:	58 2f       	mov	r21, r24
     c7a:	5d 29       	or	r21, r13
     c7c:	b7 01       	movw	r22, r14
     c7e:	ca 01       	movw	r24, r20
     c80:	1f 91       	pop	r17
     c82:	0f 91       	pop	r16
     c84:	ff 90       	pop	r15
     c86:	ef 90       	pop	r14
     c88:	df 90       	pop	r13
     c8a:	08 95       	ret

00000c8c <__unpack_f>:
     c8c:	fc 01       	movw	r30, r24
     c8e:	db 01       	movw	r26, r22
     c90:	40 81       	ld	r20, Z
     c92:	51 81       	ldd	r21, Z+1	; 0x01
     c94:	22 81       	ldd	r18, Z+2	; 0x02
     c96:	62 2f       	mov	r22, r18
     c98:	6f 77       	andi	r22, 0x7F	; 127
     c9a:	70 e0       	ldi	r23, 0x00	; 0
     c9c:	22 1f       	adc	r18, r18
     c9e:	22 27       	eor	r18, r18
     ca0:	22 1f       	adc	r18, r18
     ca2:	93 81       	ldd	r25, Z+3	; 0x03
     ca4:	89 2f       	mov	r24, r25
     ca6:	88 0f       	add	r24, r24
     ca8:	82 2b       	or	r24, r18
     caa:	28 2f       	mov	r18, r24
     cac:	30 e0       	ldi	r19, 0x00	; 0
     cae:	99 1f       	adc	r25, r25
     cb0:	99 27       	eor	r25, r25
     cb2:	99 1f       	adc	r25, r25
     cb4:	11 96       	adiw	r26, 0x01	; 1
     cb6:	9c 93       	st	X, r25
     cb8:	11 97       	sbiw	r26, 0x01	; 1
     cba:	21 15       	cp	r18, r1
     cbc:	31 05       	cpc	r19, r1
     cbe:	a9 f5       	brne	.+106    	; 0xd2a <__unpack_f+0x9e>
     cc0:	41 15       	cp	r20, r1
     cc2:	51 05       	cpc	r21, r1
     cc4:	61 05       	cpc	r22, r1
     cc6:	71 05       	cpc	r23, r1
     cc8:	11 f4       	brne	.+4      	; 0xcce <__unpack_f+0x42>
     cca:	82 e0       	ldi	r24, 0x02	; 2
     ccc:	37 c0       	rjmp	.+110    	; 0xd3c <__unpack_f+0xb0>
     cce:	82 e8       	ldi	r24, 0x82	; 130
     cd0:	9f ef       	ldi	r25, 0xFF	; 255
     cd2:	13 96       	adiw	r26, 0x03	; 3
     cd4:	9c 93       	st	X, r25
     cd6:	8e 93       	st	-X, r24
     cd8:	12 97       	sbiw	r26, 0x02	; 2
     cda:	9a 01       	movw	r18, r20
     cdc:	ab 01       	movw	r20, r22
     cde:	67 e0       	ldi	r22, 0x07	; 7
     ce0:	22 0f       	add	r18, r18
     ce2:	33 1f       	adc	r19, r19
     ce4:	44 1f       	adc	r20, r20
     ce6:	55 1f       	adc	r21, r21
     ce8:	6a 95       	dec	r22
     cea:	d1 f7       	brne	.-12     	; 0xce0 <__unpack_f+0x54>
     cec:	83 e0       	ldi	r24, 0x03	; 3
     cee:	8c 93       	st	X, r24
     cf0:	0d c0       	rjmp	.+26     	; 0xd0c <__unpack_f+0x80>
     cf2:	22 0f       	add	r18, r18
     cf4:	33 1f       	adc	r19, r19
     cf6:	44 1f       	adc	r20, r20
     cf8:	55 1f       	adc	r21, r21
     cfa:	12 96       	adiw	r26, 0x02	; 2
     cfc:	8d 91       	ld	r24, X+
     cfe:	9c 91       	ld	r25, X
     d00:	13 97       	sbiw	r26, 0x03	; 3
     d02:	01 97       	sbiw	r24, 0x01	; 1
     d04:	13 96       	adiw	r26, 0x03	; 3
     d06:	9c 93       	st	X, r25
     d08:	8e 93       	st	-X, r24
     d0a:	12 97       	sbiw	r26, 0x02	; 2
     d0c:	20 30       	cpi	r18, 0x00	; 0
     d0e:	80 e0       	ldi	r24, 0x00	; 0
     d10:	38 07       	cpc	r19, r24
     d12:	80 e0       	ldi	r24, 0x00	; 0
     d14:	48 07       	cpc	r20, r24
     d16:	80 e4       	ldi	r24, 0x40	; 64
     d18:	58 07       	cpc	r21, r24
     d1a:	58 f3       	brcs	.-42     	; 0xcf2 <__unpack_f+0x66>
     d1c:	14 96       	adiw	r26, 0x04	; 4
     d1e:	2d 93       	st	X+, r18
     d20:	3d 93       	st	X+, r19
     d22:	4d 93       	st	X+, r20
     d24:	5c 93       	st	X, r21
     d26:	17 97       	sbiw	r26, 0x07	; 7
     d28:	08 95       	ret
     d2a:	2f 3f       	cpi	r18, 0xFF	; 255
     d2c:	31 05       	cpc	r19, r1
     d2e:	79 f4       	brne	.+30     	; 0xd4e <__unpack_f+0xc2>
     d30:	41 15       	cp	r20, r1
     d32:	51 05       	cpc	r21, r1
     d34:	61 05       	cpc	r22, r1
     d36:	71 05       	cpc	r23, r1
     d38:	19 f4       	brne	.+6      	; 0xd40 <__unpack_f+0xb4>
     d3a:	84 e0       	ldi	r24, 0x04	; 4
     d3c:	8c 93       	st	X, r24
     d3e:	08 95       	ret
     d40:	64 ff       	sbrs	r22, 4
     d42:	03 c0       	rjmp	.+6      	; 0xd4a <__unpack_f+0xbe>
     d44:	81 e0       	ldi	r24, 0x01	; 1
     d46:	8c 93       	st	X, r24
     d48:	12 c0       	rjmp	.+36     	; 0xd6e <__unpack_f+0xe2>
     d4a:	1c 92       	st	X, r1
     d4c:	10 c0       	rjmp	.+32     	; 0xd6e <__unpack_f+0xe2>
     d4e:	2f 57       	subi	r18, 0x7F	; 127
     d50:	30 40       	sbci	r19, 0x00	; 0
     d52:	13 96       	adiw	r26, 0x03	; 3
     d54:	3c 93       	st	X, r19
     d56:	2e 93       	st	-X, r18
     d58:	12 97       	sbiw	r26, 0x02	; 2
     d5a:	83 e0       	ldi	r24, 0x03	; 3
     d5c:	8c 93       	st	X, r24
     d5e:	87 e0       	ldi	r24, 0x07	; 7
     d60:	44 0f       	add	r20, r20
     d62:	55 1f       	adc	r21, r21
     d64:	66 1f       	adc	r22, r22
     d66:	77 1f       	adc	r23, r23
     d68:	8a 95       	dec	r24
     d6a:	d1 f7       	brne	.-12     	; 0xd60 <__unpack_f+0xd4>
     d6c:	70 64       	ori	r23, 0x40	; 64
     d6e:	14 96       	adiw	r26, 0x04	; 4
     d70:	4d 93       	st	X+, r20
     d72:	5d 93       	st	X+, r21
     d74:	6d 93       	st	X+, r22
     d76:	7c 93       	st	X, r23
     d78:	17 97       	sbiw	r26, 0x07	; 7
     d7a:	08 95       	ret

00000d7c <__fpcmp_parts_f>:
     d7c:	1f 93       	push	r17
     d7e:	dc 01       	movw	r26, r24
     d80:	fb 01       	movw	r30, r22
     d82:	9c 91       	ld	r25, X
     d84:	92 30       	cpi	r25, 0x02	; 2
     d86:	08 f4       	brcc	.+2      	; 0xd8a <__fpcmp_parts_f+0xe>
     d88:	47 c0       	rjmp	.+142    	; 0xe18 <__fpcmp_parts_f+0x9c>
     d8a:	80 81       	ld	r24, Z
     d8c:	82 30       	cpi	r24, 0x02	; 2
     d8e:	08 f4       	brcc	.+2      	; 0xd92 <__fpcmp_parts_f+0x16>
     d90:	43 c0       	rjmp	.+134    	; 0xe18 <__fpcmp_parts_f+0x9c>
     d92:	94 30       	cpi	r25, 0x04	; 4
     d94:	51 f4       	brne	.+20     	; 0xdaa <__fpcmp_parts_f+0x2e>
     d96:	11 96       	adiw	r26, 0x01	; 1
     d98:	1c 91       	ld	r17, X
     d9a:	84 30       	cpi	r24, 0x04	; 4
     d9c:	99 f5       	brne	.+102    	; 0xe04 <__fpcmp_parts_f+0x88>
     d9e:	81 81       	ldd	r24, Z+1	; 0x01
     da0:	68 2f       	mov	r22, r24
     da2:	70 e0       	ldi	r23, 0x00	; 0
     da4:	61 1b       	sub	r22, r17
     da6:	71 09       	sbc	r23, r1
     da8:	3f c0       	rjmp	.+126    	; 0xe28 <__fpcmp_parts_f+0xac>
     daa:	84 30       	cpi	r24, 0x04	; 4
     dac:	21 f0       	breq	.+8      	; 0xdb6 <__fpcmp_parts_f+0x3a>
     dae:	92 30       	cpi	r25, 0x02	; 2
     db0:	31 f4       	brne	.+12     	; 0xdbe <__fpcmp_parts_f+0x42>
     db2:	82 30       	cpi	r24, 0x02	; 2
     db4:	b9 f1       	breq	.+110    	; 0xe24 <__fpcmp_parts_f+0xa8>
     db6:	81 81       	ldd	r24, Z+1	; 0x01
     db8:	88 23       	and	r24, r24
     dba:	89 f1       	breq	.+98     	; 0xe1e <__fpcmp_parts_f+0xa2>
     dbc:	2d c0       	rjmp	.+90     	; 0xe18 <__fpcmp_parts_f+0x9c>
     dbe:	11 96       	adiw	r26, 0x01	; 1
     dc0:	1c 91       	ld	r17, X
     dc2:	11 97       	sbiw	r26, 0x01	; 1
     dc4:	82 30       	cpi	r24, 0x02	; 2
     dc6:	f1 f0       	breq	.+60     	; 0xe04 <__fpcmp_parts_f+0x88>
     dc8:	81 81       	ldd	r24, Z+1	; 0x01
     dca:	18 17       	cp	r17, r24
     dcc:	d9 f4       	brne	.+54     	; 0xe04 <__fpcmp_parts_f+0x88>
     dce:	12 96       	adiw	r26, 0x02	; 2
     dd0:	2d 91       	ld	r18, X+
     dd2:	3c 91       	ld	r19, X
     dd4:	13 97       	sbiw	r26, 0x03	; 3
     dd6:	82 81       	ldd	r24, Z+2	; 0x02
     dd8:	93 81       	ldd	r25, Z+3	; 0x03
     dda:	82 17       	cp	r24, r18
     ddc:	93 07       	cpc	r25, r19
     dde:	94 f0       	brlt	.+36     	; 0xe04 <__fpcmp_parts_f+0x88>
     de0:	28 17       	cp	r18, r24
     de2:	39 07       	cpc	r19, r25
     de4:	bc f0       	brlt	.+46     	; 0xe14 <__fpcmp_parts_f+0x98>
     de6:	14 96       	adiw	r26, 0x04	; 4
     de8:	8d 91       	ld	r24, X+
     dea:	9d 91       	ld	r25, X+
     dec:	0d 90       	ld	r0, X+
     dee:	bc 91       	ld	r27, X
     df0:	a0 2d       	mov	r26, r0
     df2:	24 81       	ldd	r18, Z+4	; 0x04
     df4:	35 81       	ldd	r19, Z+5	; 0x05
     df6:	46 81       	ldd	r20, Z+6	; 0x06
     df8:	57 81       	ldd	r21, Z+7	; 0x07
     dfa:	28 17       	cp	r18, r24
     dfc:	39 07       	cpc	r19, r25
     dfe:	4a 07       	cpc	r20, r26
     e00:	5b 07       	cpc	r21, r27
     e02:	18 f4       	brcc	.+6      	; 0xe0a <__fpcmp_parts_f+0x8e>
     e04:	11 23       	and	r17, r17
     e06:	41 f0       	breq	.+16     	; 0xe18 <__fpcmp_parts_f+0x9c>
     e08:	0a c0       	rjmp	.+20     	; 0xe1e <__fpcmp_parts_f+0xa2>
     e0a:	82 17       	cp	r24, r18
     e0c:	93 07       	cpc	r25, r19
     e0e:	a4 07       	cpc	r26, r20
     e10:	b5 07       	cpc	r27, r21
     e12:	40 f4       	brcc	.+16     	; 0xe24 <__fpcmp_parts_f+0xa8>
     e14:	11 23       	and	r17, r17
     e16:	19 f0       	breq	.+6      	; 0xe1e <__fpcmp_parts_f+0xa2>
     e18:	61 e0       	ldi	r22, 0x01	; 1
     e1a:	70 e0       	ldi	r23, 0x00	; 0
     e1c:	05 c0       	rjmp	.+10     	; 0xe28 <__fpcmp_parts_f+0xac>
     e1e:	6f ef       	ldi	r22, 0xFF	; 255
     e20:	7f ef       	ldi	r23, 0xFF	; 255
     e22:	02 c0       	rjmp	.+4      	; 0xe28 <__fpcmp_parts_f+0xac>
     e24:	60 e0       	ldi	r22, 0x00	; 0
     e26:	70 e0       	ldi	r23, 0x00	; 0
     e28:	cb 01       	movw	r24, r22
     e2a:	1f 91       	pop	r17
     e2c:	08 95       	ret

00000e2e <Timer1_init>:
#elif TIMER1_MODE == TIMER1_PWM_FAST_8
	SET_BIT(TCCR1A, WGM10);
	CLR_BIT(TCCR1A, WGM11);
	SET_BIT(TCCR1A, WGM12);
#elif TIMER1_MODE == TIMER1_PWM_FAST_9
	CLR_BIT(TCCR1A, WGM10);
     e2e:	8f b5       	in	r24, 0x2f	; 47
     e30:	8e 7f       	andi	r24, 0xFE	; 254
     e32:	8f bd       	out	0x2f, r24	; 47
	SET_BIT(TCCR1A, WGM11);
     e34:	8f b5       	in	r24, 0x2f	; 47
     e36:	82 60       	ori	r24, 0x02	; 2
     e38:	8f bd       	out	0x2f, r24	; 47
	SET_BIT(TCCR1B, WGM12);
     e3a:	8e b5       	in	r24, 0x2e	; 46
     e3c:	88 60       	ori	r24, 0x08	; 8
     e3e:	8e bd       	out	0x2e, r24	; 46
	SET_BIT(TCCR1B, WGM13);
     e40:	8e b5       	in	r24, 0x2e	; 46
     e42:	80 61       	ori	r24, 0x10	; 16
     e44:	8e bd       	out	0x2e, r24	; 46
	CLR_BIT(TCCR1A, COM1A1);
#elif TIMER1_COMPARE_OUTPUT == COM_OUT_TOG
	SET_BIT(TCCR1A,COM1A0);
	CLR_BIT(TCCR1A,COM1A1);
#elif TIMER1_COMPARE_OUTPUT == COM_OUT_CLR
	CLR_BIT(TCCR1A,COM1B0);
     e46:	8f b5       	in	r24, 0x2f	; 47
     e48:	8f 7e       	andi	r24, 0xEF	; 239
     e4a:	8f bd       	out	0x2f, r24	; 47
	SET_BIT(TCCR1A,COM1B1);
     e4c:	8f b5       	in	r24, 0x2f	; 47
     e4e:	80 62       	ori	r24, 0x20	; 32
     e50:	8f bd       	out	0x2f, r24	; 47
	SET_BIT(TCCR1A,COM1A1);
     e52:	8f b5       	in	r24, 0x2f	; 47
     e54:	80 68       	ori	r24, 0x80	; 128
     e56:	8f bd       	out	0x2f, r24	; 47
#elif TIMO_PRES == TIMO_8_PRES
	CLR_BIT(TCCR1B, 0);
	SET_BIT(TCCR1B, 1);
	CLR_BIT(TCCR1B, 2);
#elif TIMO_PRES == TIMO_64_PRES
	SET_BIT(TCCR1B, CS10);
     e58:	8e b5       	in	r24, 0x2e	; 46
     e5a:	81 60       	ori	r24, 0x01	; 1
     e5c:	8e bd       	out	0x2e, r24	; 46
	SET_BIT(TCCR1B, CS11);
     e5e:	8e b5       	in	r24, 0x2e	; 46
     e60:	82 60       	ori	r24, 0x02	; 2
     e62:	8e bd       	out	0x2e, r24	; 46
	CLR_BIT(TCCR1B, CS12);
     e64:	8e b5       	in	r24, 0x2e	; 46
     e66:	8b 7f       	andi	r24, 0xFB	; 251
     e68:	8e bd       	out	0x2e, r24	; 46
#endif
	/*TIMSK |=(1<<2);
	TIMSK |=(1<<3);
	TIMSK |=(1<<4);*/
	return ES_OK ;
	}
     e6a:	81 e0       	ldi	r24, 0x01	; 1
     e6c:	08 95       	ret

00000e6e <Timer_PWM>:
ES_t Timer_PWM(float Copy_u16Freq ,float Copy_u8DutyCycle){
     e6e:	af 92       	push	r10
     e70:	bf 92       	push	r11
     e72:	cf 92       	push	r12
     e74:	df 92       	push	r13
     e76:	ef 92       	push	r14
     e78:	ff 92       	push	r15
     e7a:	0f 93       	push	r16
     e7c:	1f 93       	push	r17
     e7e:	df 93       	push	r29
     e80:	cf 93       	push	r28
     e82:	00 d0       	rcall	.+0      	; 0xe84 <Timer_PWM+0x16>
     e84:	00 d0       	rcall	.+0      	; 0xe86 <Timer_PWM+0x18>
     e86:	cd b7       	in	r28, 0x3d	; 61
     e88:	de b7       	in	r29, 0x3e	; 62
     e8a:	5b 01       	movw	r10, r22
     e8c:	6c 01       	movw	r12, r24
     e8e:	79 01       	movw	r14, r18
     e90:	8a 01       	movw	r16, r20
	ES_t Local_enuErrorState =ES_NOK;
	if(Copy_u8DutyCycle < 100 && Copy_u8DutyCycle > 0){
     e92:	ca 01       	movw	r24, r20
     e94:	b9 01       	movw	r22, r18
     e96:	20 e0       	ldi	r18, 0x00	; 0
     e98:	30 e0       	ldi	r19, 0x00	; 0
     e9a:	48 ec       	ldi	r20, 0xC8	; 200
     e9c:	52 e4       	ldi	r21, 0x42	; 66
     e9e:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
     ea2:	88 23       	and	r24, r24
     ea4:	0c f0       	brlt	.+2      	; 0xea8 <Timer_PWM+0x3a>
     ea6:	53 c0       	rjmp	.+166    	; 0xf4e <Timer_PWM+0xe0>
     ea8:	c8 01       	movw	r24, r16
     eaa:	b7 01       	movw	r22, r14
     eac:	20 e0       	ldi	r18, 0x00	; 0
     eae:	30 e0       	ldi	r19, 0x00	; 0
     eb0:	40 e0       	ldi	r20, 0x00	; 0
     eb2:	50 e0       	ldi	r21, 0x00	; 0
     eb4:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
     eb8:	18 16       	cp	r1, r24
     eba:	0c f0       	brlt	.+2      	; 0xebe <Timer_PWM+0x50>
     ebc:	48 c0       	rjmp	.+144    	; 0xf4e <Timer_PWM+0xe0>
		float volatile Local_u8Itrator ;
		float volatile Local_u8Itrator2 ;
		ICR1 = (16000000.0/(Copy_u16Freq * 64.0))-1 ;
     ebe:	c6 01       	movw	r24, r12
     ec0:	b5 01       	movw	r22, r10
     ec2:	20 e0       	ldi	r18, 0x00	; 0
     ec4:	30 e0       	ldi	r19, 0x00	; 0
     ec6:	40 e8       	ldi	r20, 0x80	; 128
     ec8:	52 e4       	ldi	r21, 0x42	; 66
     eca:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     ece:	9b 01       	movw	r18, r22
     ed0:	ac 01       	movw	r20, r24
     ed2:	60 e0       	ldi	r22, 0x00	; 0
     ed4:	74 e2       	ldi	r23, 0x24	; 36
     ed6:	84 e7       	ldi	r24, 0x74	; 116
     ed8:	9b e4       	ldi	r25, 0x4B	; 75
     eda:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
     ede:	20 e0       	ldi	r18, 0x00	; 0
     ee0:	30 e0       	ldi	r19, 0x00	; 0
     ee2:	40 e8       	ldi	r20, 0x80	; 128
     ee4:	5f e3       	ldi	r21, 0x3F	; 63
     ee6:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
     eea:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     eee:	77 bd       	out	0x27, r23	; 39
     ef0:	66 bd       	out	0x26, r22	; 38
		Local_u8Itrator = (u16)((Copy_u8DutyCycle * ICR1)/100.0);
     ef2:	66 b5       	in	r22, 0x26	; 38
     ef4:	77 b5       	in	r23, 0x27	; 39
     ef6:	80 e0       	ldi	r24, 0x00	; 0
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	0e 94 a9 04 	call	0x952	; 0x952 <__floatunsisf>
     efe:	9b 01       	movw	r18, r22
     f00:	ac 01       	movw	r20, r24
     f02:	c8 01       	movw	r24, r16
     f04:	b7 01       	movw	r22, r14
     f06:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     f0a:	20 e0       	ldi	r18, 0x00	; 0
     f0c:	30 e0       	ldi	r19, 0x00	; 0
     f0e:	48 ec       	ldi	r20, 0xC8	; 200
     f10:	52 e4       	ldi	r21, 0x42	; 66
     f12:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
     f16:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     f1a:	80 e0       	ldi	r24, 0x00	; 0
     f1c:	90 e0       	ldi	r25, 0x00	; 0
     f1e:	0e 94 a9 04 	call	0x952	; 0x952 <__floatunsisf>
     f22:	69 83       	std	Y+1, r22	; 0x01
     f24:	7a 83       	std	Y+2, r23	; 0x02
     f26:	8b 83       	std	Y+3, r24	; 0x03
     f28:	9c 83       	std	Y+4, r25	; 0x04
		/*ICR1H =(4999 & 0xff00);
		ICR1L =(4999 & 0x00ff);*/



		OCR1A =Local_u8Itrator ;
     f2a:	69 81       	ldd	r22, Y+1	; 0x01
     f2c:	7a 81       	ldd	r23, Y+2	; 0x02
     f2e:	8b 81       	ldd	r24, Y+3	; 0x03
     f30:	9c 81       	ldd	r25, Y+4	; 0x04
     f32:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     f36:	7b bd       	out	0x2b, r23	; 43
     f38:	6a bd       	out	0x2a, r22	; 42
		OCR1B = Local_u8Itrator;
     f3a:	69 81       	ldd	r22, Y+1	; 0x01
     f3c:	7a 81       	ldd	r23, Y+2	; 0x02
     f3e:	8b 81       	ldd	r24, Y+3	; 0x03
     f40:	9c 81       	ldd	r25, Y+4	; 0x04
     f42:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     f46:	79 bd       	out	0x29, r23	; 41
     f48:	68 bd       	out	0x28, r22	; 40
     f4a:	81 e0       	ldi	r24, 0x01	; 1
     f4c:	01 c0       	rjmp	.+2      	; 0xf50 <Timer_PWM+0xe2>
     f4e:	80 e0       	ldi	r24, 0x00	; 0

        Local_enuErrorState =ES_OK;
	}
	return Local_enuErrorState ;
}
     f50:	0f 90       	pop	r0
     f52:	0f 90       	pop	r0
     f54:	0f 90       	pop	r0
     f56:	0f 90       	pop	r0
     f58:	cf 91       	pop	r28
     f5a:	df 91       	pop	r29
     f5c:	1f 91       	pop	r17
     f5e:	0f 91       	pop	r16
     f60:	ff 90       	pop	r15
     f62:	ef 90       	pop	r14
     f64:	df 90       	pop	r13
     f66:	cf 90       	pop	r12
     f68:	bf 90       	pop	r11
     f6a:	af 90       	pop	r10
     f6c:	08 95       	ret

00000f6e <SPI_vidInit>:
void SPI_vidInit(void)
{
#if SPI_MODE == MASTER
	SPCR |=(1<<4);
#elif SPI_MODE == SLAVE
	SPCR &=~(1<<4);
     f6e:	6c 98       	cbi	0x0d, 4	; 13
	DDRB =0;
     f70:	17 ba       	out	0x17, r1	; 23
	DDRB |=(1<<6);
     f72:	be 9a       	sbi	0x17, 6	; 23
#endif

#if SPI_PRES == PRES_64
	SPCR |=(1<<1);
     f74:	69 9a       	sbi	0x0d, 1	; 13
	SPCR &=~(1<<0);
     f76:	68 98       	cbi	0x0d, 0	; 13
#endif

	SPCR |=(1<<6);
     f78:	6e 9a       	sbi	0x0d, 6	; 13
}
     f7a:	08 95       	ret

00000f7c <SPI_ui8TransmitRecive>:

u8 SPI_ui8TransmitRecive(u8 Copy_u8Data)
{
	SPDR = Copy_u8Data;
     f7c:	8f b9       	out	0x0f, r24	; 15
	while(! ((SPSR>>7)&1));
     f7e:	77 9b       	sbis	0x0e, 7	; 14
     f80:	fe cf       	rjmp	.-4      	; 0xf7e <SPI_ui8TransmitRecive+0x2>
	return SPDR;
     f82:	8f b1       	in	r24, 0x0f	; 15
}
     f84:	08 95       	ret

00000f86 <SPI_EnableINT>:
void SPI_EnableINT()
{
	SPCR |= (1<<7);
     f86:	6f 9a       	sbi	0x0d, 7	; 13
}
     f88:	08 95       	ret

00000f8a <SPI_DisableINT>:

void SPI_DisableINT()
{
	SPCR &= ~(1<<7);
     f8a:	6f 98       	cbi	0x0d, 7	; 13
}
     f8c:	08 95       	ret

00000f8e <PWM_enuInit>:
#include "../PWM/PWM_priv.h"

extern u8 PWM_u8TimerNum;

ES_t PWM_enuInit(PWM_t * Copy_pAstrPWMConfig)
{
     f8e:	fc 01       	movw	r30, r24
	ES_t Local_enuErrorState =ES_NOK;

	if(Copy_pAstrPWMConfig[0].TimerNum == 0)
     f90:	80 81       	ld	r24, Z
     f92:	88 23       	and	r24, r24
     f94:	41 f4       	brne	.+16     	; 0xfa6 <PWM_enuInit+0x18>
	{
		if (Copy_pAstrPWMConfig[0].PWM_Type == FAST_PWM)
     f96:	81 81       	ldd	r24, Z+1	; 0x01
     f98:	89 30       	cpi	r24, 0x09	; 9
     f9a:	29 f4       	brne	.+10     	; 0xfa6 <PWM_enuInit+0x18>
		{
			if (Copy_pAstrPWMConfig[0].OC_PinConfig == NON_INVERTED)
     f9c:	82 81       	ldd	r24, Z+2	; 0x02
     f9e:	8f 30       	cpi	r24, 0x0F	; 15
     fa0:	11 f4       	brne	.+4      	; 0xfa6 <PWM_enuInit+0x18>
			{
				TCCR0 = 0x68;
     fa2:	88 e6       	ldi	r24, 0x68	; 104
     fa4:	83 bf       	out	0x33, r24	; 51

		}
	}

	return Local_enuErrorState;
}
     fa6:	80 e0       	ldi	r24, 0x00	; 0
     fa8:	08 95       	ret

00000faa <PWM_enuSetFrequency>:

ES_t PWM_enuSetFrequency(u16 Copy_u16Frequency , PWM_t * Copy_pstrPWMConfig)
{
     faa:	df 93       	push	r29
     fac:	cf 93       	push	r28
     fae:	cd b7       	in	r28, 0x3d	; 61
     fb0:	de b7       	in	r29, 0x3e	; 62
     fb2:	2a 97       	sbiw	r28, 0x0a	; 10
     fb4:	0f b6       	in	r0, 0x3f	; 63
     fb6:	f8 94       	cli
     fb8:	de bf       	out	0x3e, r29	; 62
     fba:	0f be       	out	0x3f, r0	; 63
     fbc:	cd bf       	out	0x3d, r28	; 61
     fbe:	ac 01       	movw	r20, r24
     fc0:	9b 01       	movw	r18, r22
	ES_t Local_enuErrorState =ES_NOK;

	u16 Local_Au16FreqFast []={62400,7812,976,245,61};
     fc2:	de 01       	movw	r26, r28
     fc4:	11 96       	adiw	r26, 0x01	; 1
     fc6:	e2 e7       	ldi	r30, 0x72	; 114
     fc8:	f1 e0       	ldi	r31, 0x01	; 1
     fca:	8a e0       	ldi	r24, 0x0A	; 10
     fcc:	01 90       	ld	r0, Z+
     fce:	0d 92       	st	X+, r0
     fd0:	81 50       	subi	r24, 0x01	; 1
     fd2:	e1 f7       	brne	.-8      	; 0xfcc <PWM_enuSetFrequency+0x22>
	u16 Local_Au16FreqPhase[]={31200,3650,467,123,30};

	u8 flag=0;

	if (Copy_pstrPWMConfig->TimerNum == 0)
     fd4:	f9 01       	movw	r30, r18
     fd6:	80 81       	ld	r24, Z
     fd8:	88 23       	and	r24, r24
     fda:	19 f5       	brne	.+70     	; 0x1022 <PWM_enuSetFrequency+0x78>
	{
		if (Copy_pstrPWMConfig->PWM_Type == FAST_PWM)
     fdc:	81 81       	ldd	r24, Z+1	; 0x01
     fde:	89 30       	cpi	r24, 0x09	; 9
     fe0:	01 f5       	brne	.+64     	; 0x1022 <PWM_enuSetFrequency+0x78>
     fe2:	de 01       	movw	r26, r28
     fe4:	11 96       	adiw	r26, 0x01	; 1
     fe6:	fd 01       	movw	r30, r26
     fe8:	20 e0       	ldi	r18, 0x00	; 0
		{
			for (u8 i=0 ; i<5 ; i++)
			{
				if (Copy_u16Frequency == Local_Au16FreqFast[i])
     fea:	80 81       	ld	r24, Z
     fec:	91 81       	ldd	r25, Z+1	; 0x01
     fee:	2f 5f       	subi	r18, 0xFF	; 255
     ff0:	48 17       	cp	r20, r24
     ff2:	59 07       	cpc	r21, r25
     ff4:	59 f0       	breq	.+22     	; 0x100c <PWM_enuSetFrequency+0x62>

	if (Copy_pstrPWMConfig->TimerNum == 0)
	{
		if (Copy_pstrPWMConfig->PWM_Type == FAST_PWM)
		{
			for (u8 i=0 ; i<5 ; i++)
     ff6:	32 96       	adiw	r30, 0x02	; 2
     ff8:	25 30       	cpi	r18, 0x05	; 5
     ffa:	b9 f7       	brne	.-18     	; 0xfea <PWM_enuSetFrequency+0x40>
     ffc:	20 e0       	ldi	r18, 0x00	; 0
			}
			if(flag==0)
			{
				for (u8 i=0; i<5 ; i++)
				{
					if (Copy_u16Frequency > Local_Au16FreqFast[i])
     ffe:	8d 91       	ld	r24, X+
    1000:	9c 91       	ld	r25, X
    1002:	11 97       	sbiw	r26, 0x01	; 1
    1004:	2f 5f       	subi	r18, 0xFF	; 255
    1006:	84 17       	cp	r24, r20
    1008:	95 07       	cpc	r25, r21
    100a:	38 f4       	brcc	.+14     	; 0x101a <PWM_enuSetFrequency+0x70>
					{
						TCCR0 &=~(7<<0);
    100c:	83 b7       	in	r24, 0x33	; 51
    100e:	88 7f       	andi	r24, 0xF8	; 248
    1010:	83 bf       	out	0x33, r24	; 51
						TCCR0 |= (i+1);
    1012:	83 b7       	in	r24, 0x33	; 51
    1014:	28 2b       	or	r18, r24
    1016:	23 bf       	out	0x33, r18	; 51
    1018:	04 c0       	rjmp	.+8      	; 0x1022 <PWM_enuSetFrequency+0x78>
					break;
				}
			}
			if(flag==0)
			{
				for (u8 i=0; i<5 ; i++)
    101a:	12 96       	adiw	r26, 0x02	; 2
    101c:	25 30       	cpi	r18, 0x05	; 5
    101e:	79 f7       	brne	.-34     	; 0xffe <PWM_enuSetFrequency+0x54>
    1020:	0a c0       	rjmp	.+20     	; 0x1036 <PWM_enuSetFrequency+0x8c>
			}
		}
	}

	return Local_enuErrorState;
}
    1022:	80 e0       	ldi	r24, 0x00	; 0
    1024:	2a 96       	adiw	r28, 0x0a	; 10
    1026:	0f b6       	in	r0, 0x3f	; 63
    1028:	f8 94       	cli
    102a:	de bf       	out	0x3e, r29	; 62
    102c:	0f be       	out	0x3f, r0	; 63
    102e:	cd bf       	out	0x3d, r28	; 61
    1030:	cf 91       	pop	r28
    1032:	df 91       	pop	r29
    1034:	08 95       	ret
						break;
					}
				}
				if (flag==0)
				{
					TCCR0 &=~(7<<0);
    1036:	83 b7       	in	r24, 0x33	; 51
    1038:	88 7f       	andi	r24, 0xF8	; 248
    103a:	83 bf       	out	0x33, r24	; 51
					TCCR0 |= (5);
    103c:	83 b7       	in	r24, 0x33	; 51
    103e:	85 60       	ori	r24, 0x05	; 5
    1040:	83 bf       	out	0x33, r24	; 51
    1042:	ef cf       	rjmp	.-34     	; 0x1022 <PWM_enuSetFrequency+0x78>

00001044 <PWM_enuSetDutyCycle>:

	return Local_enuErrorState;
}

ES_t PWM_enuSetDutyCycle(u8 Copy_u8DutyCycle, PWM_t * Copy_pstrPWMConfig)
{
    1044:	98 2f       	mov	r25, r24
    1046:	fb 01       	movw	r30, r22
	ES_t Local_enuErrorState =ES_NOK;

	if (Copy_u8DutyCycle <=100)
    1048:	85 36       	cpi	r24, 0x65	; 101
    104a:	c0 f4       	brcc	.+48     	; 0x107c <PWM_enuSetDutyCycle+0x38>
	{
		if (Copy_pstrPWMConfig->TimerNum == 0)
    104c:	80 81       	ld	r24, Z
    104e:	88 23       	and	r24, r24
    1050:	a9 f4       	brne	.+42     	; 0x107c <PWM_enuSetDutyCycle+0x38>
		{
			if (Copy_pstrPWMConfig->PWM_Type == FAST_PWM)
    1052:	81 81       	ldd	r24, Z+1	; 0x01
    1054:	89 30       	cpi	r24, 0x09	; 9
    1056:	91 f4       	brne	.+36     	; 0x107c <PWM_enuSetDutyCycle+0x38>
			{
				if (Copy_pstrPWMConfig->OC_PinConfig == NON_INVERTED)
    1058:	82 81       	ldd	r24, Z+2	; 0x02
    105a:	8f 30       	cpi	r24, 0x0F	; 15
    105c:	79 f4       	brne	.+30     	; 0x107c <PWM_enuSetDutyCycle+0x38>
				{
					u8 OCR_Value = (u8)( (Copy_u8DutyCycle * 256ul)/100ul );
    105e:	69 2f       	mov	r22, r25
    1060:	70 e0       	ldi	r23, 0x00	; 0
    1062:	80 e0       	ldi	r24, 0x00	; 0
    1064:	90 e0       	ldi	r25, 0x00	; 0
    1066:	98 2f       	mov	r25, r24
    1068:	87 2f       	mov	r24, r23
    106a:	76 2f       	mov	r23, r22
    106c:	66 27       	eor	r22, r22
    106e:	24 e6       	ldi	r18, 0x64	; 100
    1070:	30 e0       	ldi	r19, 0x00	; 0
    1072:	40 e0       	ldi	r20, 0x00	; 0
    1074:	50 e0       	ldi	r21, 0x00	; 0
    1076:	0e 94 90 0a 	call	0x1520	; 0x1520 <__udivmodsi4>
					OCR0 = OCR_Value;
    107a:	2c bf       	out	0x3c, r18	; 60
			}
		}
	}

	return Local_enuErrorState;
}
    107c:	80 e0       	ldi	r24, 0x00	; 0
    107e:	08 95       	ret

00001080 <DIO_enuInit>:

ES_t DIO_enuInit(void)
{
	ES_t Local_enuErrorState = ES_NOK;

	DDRA=CONC(DIO_u8PA7_DIR,DIO_u8PA6_DIR,DIO_u8PA5_DIR,DIO_u8PA4_DIR,DIO_u8PA3_DIR,DIO_u8PA2_DIR,DIO_u8PA1_DIR,DIO_u8PA0_DIR);
    1080:	81 eb       	ldi	r24, 0xB1	; 177
    1082:	8a bb       	out	0x1a, r24	; 26

	PORTA=CONC(DIO_u8PA7_VALUE,DIO_u8PA6_VALUE,DIO_u8PA5_VALUE,DIO_u8PA4_VALUE,DIO_u8PA3_VALUE,DIO_u8PA2_VALUE,DIO_u8PA1_VALUE,DIO_u8PA0_VALUE);
    1084:	86 e1       	ldi	r24, 0x16	; 22
    1086:	8b bb       	out	0x1b, r24	; 27

	return Local_enuErrorState;
}
    1088:	80 e0       	ldi	r24, 0x00	; 0
    108a:	08 95       	ret

0000108c <DIO_enuSetPinDirection>:

ES_t DIO_enuSetPinDirection(u8 Copy_u8PortID , u8 Copy_u8PinID , u8 Copy_u8Direction)
{
	ES_t Local_enuErrorState = ES_NOK;

	if (Copy_u8PortID <= DIO_u8GROUP_D
    108c:	84 30       	cpi	r24, 0x04	; 4
    108e:	08 f0       	brcs	.+2      	; 0x1092 <DIO_enuSetPinDirection+0x6>
    1090:	65 c0       	rjmp	.+202    	; 0x115c <DIO_enuSetPinDirection+0xd0>
    1092:	68 30       	cpi	r22, 0x08	; 8
    1094:	08 f0       	brcs	.+2      	; 0x1098 <DIO_enuSetPinDirection+0xc>
    1096:	62 c0       	rjmp	.+196    	; 0x115c <DIO_enuSetPinDirection+0xd0>
    1098:	42 30       	cpi	r20, 0x02	; 2
    109a:	08 f0       	brcs	.+2      	; 0x109e <DIO_enuSetPinDirection+0x12>
    109c:	5f c0       	rjmp	.+190    	; 0x115c <DIO_enuSetPinDirection+0xd0>
			&& Copy_u8PinID <= DIO_u8PIN7
			&& Copy_u8Direction <= DIO_u8OUTPUT)
	{
		switch (Copy_u8PortID)
    109e:	81 30       	cpi	r24, 0x01	; 1
    10a0:	e9 f0       	breq	.+58     	; 0x10dc <DIO_enuSetPinDirection+0x50>
    10a2:	81 30       	cpi	r24, 0x01	; 1
    10a4:	30 f0       	brcs	.+12     	; 0x10b2 <DIO_enuSetPinDirection+0x26>
    10a6:	82 30       	cpi	r24, 0x02	; 2
    10a8:	71 f1       	breq	.+92     	; 0x1106 <DIO_enuSetPinDirection+0x7a>
    10aa:	83 30       	cpi	r24, 0x03	; 3
    10ac:	09 f0       	breq	.+2      	; 0x10b0 <DIO_enuSetPinDirection+0x24>
    10ae:	54 c0       	rjmp	.+168    	; 0x1158 <DIO_enuSetPinDirection+0xcc>
    10b0:	3f c0       	rjmp	.+126    	; 0x1130 <DIO_enuSetPinDirection+0xa4>
		{
		case DIO_u8GROUP_A:

			DDRA &=~(DIO_MASK_BIT<<Copy_u8PinID);
    10b2:	8a b3       	in	r24, 0x1a	; 26
    10b4:	21 e0       	ldi	r18, 0x01	; 1
    10b6:	30 e0       	ldi	r19, 0x00	; 0
    10b8:	06 2e       	mov	r0, r22
    10ba:	02 c0       	rjmp	.+4      	; 0x10c0 <DIO_enuSetPinDirection+0x34>
    10bc:	22 0f       	add	r18, r18
    10be:	33 1f       	adc	r19, r19
    10c0:	0a 94       	dec	r0
    10c2:	e2 f7       	brpl	.-8      	; 0x10bc <DIO_enuSetPinDirection+0x30>
    10c4:	20 95       	com	r18
    10c6:	28 23       	and	r18, r24
			DDRA |= (Copy_u8Direction<<Copy_u8PinID);
    10c8:	84 2f       	mov	r24, r20
    10ca:	90 e0       	ldi	r25, 0x00	; 0
    10cc:	02 c0       	rjmp	.+4      	; 0x10d2 <DIO_enuSetPinDirection+0x46>
    10ce:	88 0f       	add	r24, r24
    10d0:	99 1f       	adc	r25, r25
    10d2:	6a 95       	dec	r22
    10d4:	e2 f7       	brpl	.-8      	; 0x10ce <DIO_enuSetPinDirection+0x42>
    10d6:	28 2b       	or	r18, r24
    10d8:	2a bb       	out	0x1a, r18	; 26
    10da:	3e c0       	rjmp	.+124    	; 0x1158 <DIO_enuSetPinDirection+0xcc>

			break;
		case DIO_u8GROUP_B:

			DDRB &=~(DIO_MASK_BIT<<Copy_u8PinID);
    10dc:	87 b3       	in	r24, 0x17	; 23
    10de:	21 e0       	ldi	r18, 0x01	; 1
    10e0:	30 e0       	ldi	r19, 0x00	; 0
    10e2:	06 2e       	mov	r0, r22
    10e4:	02 c0       	rjmp	.+4      	; 0x10ea <DIO_enuSetPinDirection+0x5e>
    10e6:	22 0f       	add	r18, r18
    10e8:	33 1f       	adc	r19, r19
    10ea:	0a 94       	dec	r0
    10ec:	e2 f7       	brpl	.-8      	; 0x10e6 <DIO_enuSetPinDirection+0x5a>
    10ee:	20 95       	com	r18
    10f0:	28 23       	and	r18, r24
			DDRB |= (Copy_u8Direction<<Copy_u8PinID);
    10f2:	84 2f       	mov	r24, r20
    10f4:	90 e0       	ldi	r25, 0x00	; 0
    10f6:	02 c0       	rjmp	.+4      	; 0x10fc <DIO_enuSetPinDirection+0x70>
    10f8:	88 0f       	add	r24, r24
    10fa:	99 1f       	adc	r25, r25
    10fc:	6a 95       	dec	r22
    10fe:	e2 f7       	brpl	.-8      	; 0x10f8 <DIO_enuSetPinDirection+0x6c>
    1100:	28 2b       	or	r18, r24
    1102:	27 bb       	out	0x17, r18	; 23
    1104:	29 c0       	rjmp	.+82     	; 0x1158 <DIO_enuSetPinDirection+0xcc>

			break;
		case DIO_u8GROUP_C:

			DDRC &=~(DIO_MASK_BIT<<Copy_u8PinID);
    1106:	84 b3       	in	r24, 0x14	; 20
    1108:	21 e0       	ldi	r18, 0x01	; 1
    110a:	30 e0       	ldi	r19, 0x00	; 0
    110c:	06 2e       	mov	r0, r22
    110e:	02 c0       	rjmp	.+4      	; 0x1114 <DIO_enuSetPinDirection+0x88>
    1110:	22 0f       	add	r18, r18
    1112:	33 1f       	adc	r19, r19
    1114:	0a 94       	dec	r0
    1116:	e2 f7       	brpl	.-8      	; 0x1110 <DIO_enuSetPinDirection+0x84>
    1118:	20 95       	com	r18
    111a:	28 23       	and	r18, r24
			DDRC |= (Copy_u8Direction<<Copy_u8PinID);
    111c:	84 2f       	mov	r24, r20
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	02 c0       	rjmp	.+4      	; 0x1126 <DIO_enuSetPinDirection+0x9a>
    1122:	88 0f       	add	r24, r24
    1124:	99 1f       	adc	r25, r25
    1126:	6a 95       	dec	r22
    1128:	e2 f7       	brpl	.-8      	; 0x1122 <DIO_enuSetPinDirection+0x96>
    112a:	28 2b       	or	r18, r24
    112c:	24 bb       	out	0x14, r18	; 20
    112e:	14 c0       	rjmp	.+40     	; 0x1158 <DIO_enuSetPinDirection+0xcc>

			break;
		case DIO_u8GROUP_D:

			DDRD &=~(DIO_MASK_BIT<<Copy_u8PinID);
    1130:	81 b3       	in	r24, 0x11	; 17
    1132:	21 e0       	ldi	r18, 0x01	; 1
    1134:	30 e0       	ldi	r19, 0x00	; 0
    1136:	06 2e       	mov	r0, r22
    1138:	02 c0       	rjmp	.+4      	; 0x113e <DIO_enuSetPinDirection+0xb2>
    113a:	22 0f       	add	r18, r18
    113c:	33 1f       	adc	r19, r19
    113e:	0a 94       	dec	r0
    1140:	e2 f7       	brpl	.-8      	; 0x113a <DIO_enuSetPinDirection+0xae>
    1142:	20 95       	com	r18
    1144:	28 23       	and	r18, r24
			DDRD |= (Copy_u8Direction<<Copy_u8PinID);
    1146:	84 2f       	mov	r24, r20
    1148:	90 e0       	ldi	r25, 0x00	; 0
    114a:	02 c0       	rjmp	.+4      	; 0x1150 <DIO_enuSetPinDirection+0xc4>
    114c:	88 0f       	add	r24, r24
    114e:	99 1f       	adc	r25, r25
    1150:	6a 95       	dec	r22
    1152:	e2 f7       	brpl	.-8      	; 0x114c <DIO_enuSetPinDirection+0xc0>
    1154:	28 2b       	or	r18, r24
    1156:	21 bb       	out	0x11, r18	; 17
    1158:	81 e0       	ldi	r24, 0x01	; 1
    115a:	08 95       	ret
    115c:	83 e0       	ldi	r24, 0x03	; 3
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
	}

	return Local_enuErrorState;
}
    115e:	08 95       	ret

00001160 <DIO_enuSetPinValue>:

ES_t DIO_enuSetPinValue(u8 Copy_u8PortID , u8 Copy_u8PinID , u8 Copy_u8Value)
{
	ES_t Local_enuErrorState = ES_NOK;

	if (Copy_u8PortID <= DIO_u8GROUP_D
    1160:	84 30       	cpi	r24, 0x04	; 4
    1162:	08 f0       	brcs	.+2      	; 0x1166 <DIO_enuSetPinValue+0x6>
    1164:	65 c0       	rjmp	.+202    	; 0x1230 <DIO_enuSetPinValue+0xd0>
    1166:	68 30       	cpi	r22, 0x08	; 8
    1168:	08 f0       	brcs	.+2      	; 0x116c <DIO_enuSetPinValue+0xc>
    116a:	62 c0       	rjmp	.+196    	; 0x1230 <DIO_enuSetPinValue+0xd0>
    116c:	42 30       	cpi	r20, 0x02	; 2
    116e:	08 f0       	brcs	.+2      	; 0x1172 <DIO_enuSetPinValue+0x12>
    1170:	5f c0       	rjmp	.+190    	; 0x1230 <DIO_enuSetPinValue+0xd0>
			&& Copy_u8PinID <= DIO_u8PIN7
			&& (Copy_u8Value <= DIO_u8HIGH || Copy_u8Value <= DIO_u8PULL_UP ))
	{
		switch (Copy_u8PortID)
    1172:	81 30       	cpi	r24, 0x01	; 1
    1174:	e9 f0       	breq	.+58     	; 0x11b0 <DIO_enuSetPinValue+0x50>
    1176:	81 30       	cpi	r24, 0x01	; 1
    1178:	30 f0       	brcs	.+12     	; 0x1186 <DIO_enuSetPinValue+0x26>
    117a:	82 30       	cpi	r24, 0x02	; 2
    117c:	71 f1       	breq	.+92     	; 0x11da <DIO_enuSetPinValue+0x7a>
    117e:	83 30       	cpi	r24, 0x03	; 3
    1180:	09 f0       	breq	.+2      	; 0x1184 <DIO_enuSetPinValue+0x24>
    1182:	54 c0       	rjmp	.+168    	; 0x122c <DIO_enuSetPinValue+0xcc>
    1184:	3f c0       	rjmp	.+126    	; 0x1204 <DIO_enuSetPinValue+0xa4>
		{
		case DIO_u8GROUP_A:

			PORTA &=~(DIO_MASK_BIT<<Copy_u8PinID);
    1186:	8b b3       	in	r24, 0x1b	; 27
    1188:	21 e0       	ldi	r18, 0x01	; 1
    118a:	30 e0       	ldi	r19, 0x00	; 0
    118c:	06 2e       	mov	r0, r22
    118e:	02 c0       	rjmp	.+4      	; 0x1194 <DIO_enuSetPinValue+0x34>
    1190:	22 0f       	add	r18, r18
    1192:	33 1f       	adc	r19, r19
    1194:	0a 94       	dec	r0
    1196:	e2 f7       	brpl	.-8      	; 0x1190 <DIO_enuSetPinValue+0x30>
    1198:	20 95       	com	r18
    119a:	28 23       	and	r18, r24
			PORTA |= (Copy_u8Value<<Copy_u8PinID);
    119c:	84 2f       	mov	r24, r20
    119e:	90 e0       	ldi	r25, 0x00	; 0
    11a0:	02 c0       	rjmp	.+4      	; 0x11a6 <DIO_enuSetPinValue+0x46>
    11a2:	88 0f       	add	r24, r24
    11a4:	99 1f       	adc	r25, r25
    11a6:	6a 95       	dec	r22
    11a8:	e2 f7       	brpl	.-8      	; 0x11a2 <DIO_enuSetPinValue+0x42>
    11aa:	28 2b       	or	r18, r24
    11ac:	2b bb       	out	0x1b, r18	; 27
    11ae:	3e c0       	rjmp	.+124    	; 0x122c <DIO_enuSetPinValue+0xcc>

			break;
		case DIO_u8GROUP_B:

			PORTB &=~(DIO_MASK_BIT<<Copy_u8PinID);
    11b0:	88 b3       	in	r24, 0x18	; 24
    11b2:	21 e0       	ldi	r18, 0x01	; 1
    11b4:	30 e0       	ldi	r19, 0x00	; 0
    11b6:	06 2e       	mov	r0, r22
    11b8:	02 c0       	rjmp	.+4      	; 0x11be <DIO_enuSetPinValue+0x5e>
    11ba:	22 0f       	add	r18, r18
    11bc:	33 1f       	adc	r19, r19
    11be:	0a 94       	dec	r0
    11c0:	e2 f7       	brpl	.-8      	; 0x11ba <DIO_enuSetPinValue+0x5a>
    11c2:	20 95       	com	r18
    11c4:	28 23       	and	r18, r24
			PORTB |= (Copy_u8Value<<Copy_u8PinID);
    11c6:	84 2f       	mov	r24, r20
    11c8:	90 e0       	ldi	r25, 0x00	; 0
    11ca:	02 c0       	rjmp	.+4      	; 0x11d0 <DIO_enuSetPinValue+0x70>
    11cc:	88 0f       	add	r24, r24
    11ce:	99 1f       	adc	r25, r25
    11d0:	6a 95       	dec	r22
    11d2:	e2 f7       	brpl	.-8      	; 0x11cc <DIO_enuSetPinValue+0x6c>
    11d4:	28 2b       	or	r18, r24
    11d6:	28 bb       	out	0x18, r18	; 24
    11d8:	29 c0       	rjmp	.+82     	; 0x122c <DIO_enuSetPinValue+0xcc>

			break;
		case DIO_u8GROUP_C:

			PORTC &=~(DIO_MASK_BIT<<Copy_u8PinID);
    11da:	85 b3       	in	r24, 0x15	; 21
    11dc:	21 e0       	ldi	r18, 0x01	; 1
    11de:	30 e0       	ldi	r19, 0x00	; 0
    11e0:	06 2e       	mov	r0, r22
    11e2:	02 c0       	rjmp	.+4      	; 0x11e8 <DIO_enuSetPinValue+0x88>
    11e4:	22 0f       	add	r18, r18
    11e6:	33 1f       	adc	r19, r19
    11e8:	0a 94       	dec	r0
    11ea:	e2 f7       	brpl	.-8      	; 0x11e4 <DIO_enuSetPinValue+0x84>
    11ec:	20 95       	com	r18
    11ee:	28 23       	and	r18, r24
			PORTC |= (Copy_u8Value<<Copy_u8PinID);
    11f0:	84 2f       	mov	r24, r20
    11f2:	90 e0       	ldi	r25, 0x00	; 0
    11f4:	02 c0       	rjmp	.+4      	; 0x11fa <DIO_enuSetPinValue+0x9a>
    11f6:	88 0f       	add	r24, r24
    11f8:	99 1f       	adc	r25, r25
    11fa:	6a 95       	dec	r22
    11fc:	e2 f7       	brpl	.-8      	; 0x11f6 <DIO_enuSetPinValue+0x96>
    11fe:	28 2b       	or	r18, r24
    1200:	25 bb       	out	0x15, r18	; 21
    1202:	14 c0       	rjmp	.+40     	; 0x122c <DIO_enuSetPinValue+0xcc>

			break;
		case DIO_u8GROUP_D:

			PORTD &=~(DIO_MASK_BIT<<Copy_u8PinID);
    1204:	82 b3       	in	r24, 0x12	; 18
    1206:	21 e0       	ldi	r18, 0x01	; 1
    1208:	30 e0       	ldi	r19, 0x00	; 0
    120a:	06 2e       	mov	r0, r22
    120c:	02 c0       	rjmp	.+4      	; 0x1212 <DIO_enuSetPinValue+0xb2>
    120e:	22 0f       	add	r18, r18
    1210:	33 1f       	adc	r19, r19
    1212:	0a 94       	dec	r0
    1214:	e2 f7       	brpl	.-8      	; 0x120e <DIO_enuSetPinValue+0xae>
    1216:	20 95       	com	r18
    1218:	28 23       	and	r18, r24
			PORTD |= (Copy_u8Value<<Copy_u8PinID);
    121a:	84 2f       	mov	r24, r20
    121c:	90 e0       	ldi	r25, 0x00	; 0
    121e:	02 c0       	rjmp	.+4      	; 0x1224 <DIO_enuSetPinValue+0xc4>
    1220:	88 0f       	add	r24, r24
    1222:	99 1f       	adc	r25, r25
    1224:	6a 95       	dec	r22
    1226:	e2 f7       	brpl	.-8      	; 0x1220 <DIO_enuSetPinValue+0xc0>
    1228:	28 2b       	or	r18, r24
    122a:	22 bb       	out	0x12, r18	; 18
    122c:	81 e0       	ldi	r24, 0x01	; 1
    122e:	08 95       	ret
    1230:	83 e0       	ldi	r24, 0x03	; 3
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
	}

	return Local_enuErrorState;
}
    1232:	08 95       	ret

00001234 <DIO_enuTogPinValue>:

ES_t DIO_enuTogPinValue(u8 Copy_u8PortID , u8 Copy_u8PinID)
{
	ES_t Local_enuErrorState = ES_NOK;

	if (Copy_u8PortID <= DIO_u8GROUP_D
    1234:	84 30       	cpi	r24, 0x04	; 4
    1236:	c0 f5       	brcc	.+112    	; 0x12a8 <DIO_enuTogPinValue+0x74>
    1238:	68 30       	cpi	r22, 0x08	; 8
    123a:	b0 f5       	brcc	.+108    	; 0x12a8 <DIO_enuTogPinValue+0x74>
			&& Copy_u8PinID <= DIO_u8PIN7)
	{
		switch (Copy_u8PortID)
    123c:	81 30       	cpi	r24, 0x01	; 1
    123e:	91 f0       	breq	.+36     	; 0x1264 <DIO_enuTogPinValue+0x30>
    1240:	81 30       	cpi	r24, 0x01	; 1
    1242:	28 f0       	brcs	.+10     	; 0x124e <DIO_enuTogPinValue+0x1a>
    1244:	82 30       	cpi	r24, 0x02	; 2
    1246:	c9 f0       	breq	.+50     	; 0x127a <DIO_enuTogPinValue+0x46>
    1248:	83 30       	cpi	r24, 0x03	; 3
    124a:	61 f5       	brne	.+88     	; 0x12a4 <DIO_enuTogPinValue+0x70>
    124c:	21 c0       	rjmp	.+66     	; 0x1290 <DIO_enuTogPinValue+0x5c>
		{
		case DIO_u8GROUP_A:

			PORTA ^= (DIO_MASK_BIT<<Copy_u8PinID);
    124e:	2b b3       	in	r18, 0x1b	; 27
    1250:	81 e0       	ldi	r24, 0x01	; 1
    1252:	90 e0       	ldi	r25, 0x00	; 0
    1254:	02 c0       	rjmp	.+4      	; 0x125a <DIO_enuTogPinValue+0x26>
    1256:	88 0f       	add	r24, r24
    1258:	99 1f       	adc	r25, r25
    125a:	6a 95       	dec	r22
    125c:	e2 f7       	brpl	.-8      	; 0x1256 <DIO_enuTogPinValue+0x22>
    125e:	28 27       	eor	r18, r24
    1260:	2b bb       	out	0x1b, r18	; 27
    1262:	20 c0       	rjmp	.+64     	; 0x12a4 <DIO_enuTogPinValue+0x70>

			break;
		case DIO_u8GROUP_B:

			PORTB ^= (DIO_MASK_BIT<<Copy_u8PinID);
    1264:	28 b3       	in	r18, 0x18	; 24
    1266:	81 e0       	ldi	r24, 0x01	; 1
    1268:	90 e0       	ldi	r25, 0x00	; 0
    126a:	02 c0       	rjmp	.+4      	; 0x1270 <DIO_enuTogPinValue+0x3c>
    126c:	88 0f       	add	r24, r24
    126e:	99 1f       	adc	r25, r25
    1270:	6a 95       	dec	r22
    1272:	e2 f7       	brpl	.-8      	; 0x126c <DIO_enuTogPinValue+0x38>
    1274:	28 27       	eor	r18, r24
    1276:	28 bb       	out	0x18, r18	; 24
    1278:	15 c0       	rjmp	.+42     	; 0x12a4 <DIO_enuTogPinValue+0x70>

			break;
		case DIO_u8GROUP_C:

			PORTC ^= (DIO_MASK_BIT<<Copy_u8PinID);
    127a:	25 b3       	in	r18, 0x15	; 21
    127c:	81 e0       	ldi	r24, 0x01	; 1
    127e:	90 e0       	ldi	r25, 0x00	; 0
    1280:	02 c0       	rjmp	.+4      	; 0x1286 <DIO_enuTogPinValue+0x52>
    1282:	88 0f       	add	r24, r24
    1284:	99 1f       	adc	r25, r25
    1286:	6a 95       	dec	r22
    1288:	e2 f7       	brpl	.-8      	; 0x1282 <DIO_enuTogPinValue+0x4e>
    128a:	28 27       	eor	r18, r24
    128c:	25 bb       	out	0x15, r18	; 21
    128e:	0a c0       	rjmp	.+20     	; 0x12a4 <DIO_enuTogPinValue+0x70>

			break;
		case DIO_u8GROUP_D:

			PORTD ^= (DIO_MASK_BIT<<Copy_u8PinID);
    1290:	22 b3       	in	r18, 0x12	; 18
    1292:	81 e0       	ldi	r24, 0x01	; 1
    1294:	90 e0       	ldi	r25, 0x00	; 0
    1296:	02 c0       	rjmp	.+4      	; 0x129c <DIO_enuTogPinValue+0x68>
    1298:	88 0f       	add	r24, r24
    129a:	99 1f       	adc	r25, r25
    129c:	6a 95       	dec	r22
    129e:	e2 f7       	brpl	.-8      	; 0x1298 <DIO_enuTogPinValue+0x64>
    12a0:	28 27       	eor	r18, r24
    12a2:	22 bb       	out	0x12, r18	; 18
    12a4:	81 e0       	ldi	r24, 0x01	; 1
    12a6:	08 95       	ret
    12a8:	83 e0       	ldi	r24, 0x03	; 3
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
	}

	return Local_enuErrorState;
}
    12aa:	08 95       	ret

000012ac <DIO_enuGetPinValue>:
ES_t DIO_enuGetPinValue(u8 Copy_u8PortID , u8 Copy_u8PinID , u8 * Copy_pu8Value)
{
    12ac:	fa 01       	movw	r30, r20
	ES_t Local_enuErrorState = ES_NOK;

	if (Copy_pu8Value != NULL)
    12ae:	41 15       	cp	r20, r1
    12b0:	51 05       	cpc	r21, r1
    12b2:	11 f4       	brne	.+4      	; 0x12b8 <DIO_enuGetPinValue+0xc>
    12b4:	82 e0       	ldi	r24, 0x02	; 2
    12b6:	08 95       	ret
	{
		if(Copy_u8PortID <= DIO_u8GROUP_D
    12b8:	84 30       	cpi	r24, 0x04	; 4
    12ba:	e0 f4       	brcc	.+56     	; 0x12f4 <DIO_enuGetPinValue+0x48>
    12bc:	68 30       	cpi	r22, 0x08	; 8
    12be:	d0 f4       	brcc	.+52     	; 0x12f4 <DIO_enuGetPinValue+0x48>
				&& Copy_u8PinID <= DIO_u8PIN7)
		{
			switch (Copy_u8PortID)
    12c0:	81 30       	cpi	r24, 0x01	; 1
    12c2:	49 f0       	breq	.+18     	; 0x12d6 <DIO_enuGetPinValue+0x2a>
    12c4:	81 30       	cpi	r24, 0x01	; 1
    12c6:	28 f0       	brcs	.+10     	; 0x12d2 <DIO_enuGetPinValue+0x26>
    12c8:	82 30       	cpi	r24, 0x02	; 2
    12ca:	39 f0       	breq	.+14     	; 0x12da <DIO_enuGetPinValue+0x2e>
    12cc:	83 30       	cpi	r24, 0x03	; 3
    12ce:	81 f4       	brne	.+32     	; 0x12f0 <DIO_enuGetPinValue+0x44>
    12d0:	06 c0       	rjmp	.+12     	; 0x12de <DIO_enuGetPinValue+0x32>
			{
			case DIO_u8GROUP_A:

				*Copy_pu8Value = ( (PINA >> Copy_u8PinID ) & DIO_MASK_BIT);
    12d2:	89 b3       	in	r24, 0x19	; 25
    12d4:	05 c0       	rjmp	.+10     	; 0x12e0 <DIO_enuGetPinValue+0x34>

				break;
			case DIO_u8GROUP_B:

				*Copy_pu8Value = ( (PINB >> Copy_u8PinID ) & DIO_MASK_BIT);
    12d6:	86 b3       	in	r24, 0x16	; 22
    12d8:	03 c0       	rjmp	.+6      	; 0x12e0 <DIO_enuGetPinValue+0x34>

				break;
			case DIO_u8GROUP_C:

				*Copy_pu8Value = ( (PINC >> Copy_u8PinID ) & DIO_MASK_BIT);
    12da:	83 b3       	in	r24, 0x13	; 19
    12dc:	01 c0       	rjmp	.+2      	; 0x12e0 <DIO_enuGetPinValue+0x34>

				break;
			case DIO_u8GROUP_D:

				*Copy_pu8Value = ( (PIND >> Copy_u8PinID ) & DIO_MASK_BIT);
    12de:	80 b3       	in	r24, 0x10	; 16
    12e0:	90 e0       	ldi	r25, 0x00	; 0
    12e2:	02 c0       	rjmp	.+4      	; 0x12e8 <DIO_enuGetPinValue+0x3c>
    12e4:	95 95       	asr	r25
    12e6:	87 95       	ror	r24
    12e8:	6a 95       	dec	r22
    12ea:	e2 f7       	brpl	.-8      	; 0x12e4 <DIO_enuGetPinValue+0x38>
    12ec:	81 70       	andi	r24, 0x01	; 1
    12ee:	80 83       	st	Z, r24
    12f0:	81 e0       	ldi	r24, 0x01	; 1
    12f2:	08 95       	ret
    12f4:	83 e0       	ldi	r24, 0x03	; 3
	{
		Local_enuErrorState = ES_NULL_POINTER;
	}

	return Local_enuErrorState;
}
    12f6:	08 95       	ret

000012f8 <ADC_Init>:
#include "ADC_config.h"
#include <avr/delay.h>

void ADC_Init()
{
	DDRA |= (1<<0) ;			/* Make ADC port as input */
    12f8:	d0 9a       	sbi	0x1a, 0	; 26
	ADCSRA = 0x87 ;		/* Enable ADC, freq/128  */
    12fa:	87 e8       	ldi	r24, 0x87	; 135
    12fc:	86 b9       	out	0x06, r24	; 6
	ADMUX = 0x40;			/* Vref: Avcc, ADC channel: 0 */
    12fe:	80 e4       	ldi	r24, 0x40	; 64
    1300:	87 b9       	out	0x07, r24	; 7

}
    1302:	08 95       	ret

00001304 <ADC_Read>:

int ADC_Read(char channel)
{
	int Ain,AinLow;
    //ADMUX=ADMUX & 0xf8;
	ADMUX=ADMUX|(channel & 0x0f);	/* Set input channel to read */
    1304:	97 b1       	in	r25, 0x07	; 7
    1306:	8f 70       	andi	r24, 0x0F	; 15
    1308:	89 2b       	or	r24, r25
    130a:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1<<ADSC);		/* Start conversion */
    130c:	36 9a       	sbi	0x06, 6	; 6
	while((ADCSRA & (1<<ADIF))==0);	/* Monitor end of conversion interrupt */
    130e:	34 9b       	sbis	0x06, 4	; 6
    1310:	fe cf       	rjmp	.-4      	; 0x130e <ADC_Read+0xa>
    1312:	85 e3       	ldi	r24, 0x35	; 53
    1314:	8a 95       	dec	r24
    1316:	f1 f7       	brne	.-4      	; 0x1314 <ADC_Read+0x10>

	_delay_us(10);
	AinLow = (int)ADCL;		/* Read lower byte*/
    1318:	84 b1       	in	r24, 0x04	; 4
	Ain = (int)ADCH*256;		/* Read higher 2 bits and
    131a:	35 b1       	in	r19, 0x05	; 5
    131c:	20 e0       	ldi	r18, 0x00	; 0
    131e:	28 0f       	add	r18, r24
    1320:	31 1d       	adc	r19, r1
					Multiply with weight */
	Ain = Ain + AinLow;
	return(Ain);			/* Return digital value*/
}
    1322:	c9 01       	movw	r24, r18
    1324:	08 95       	ret

00001326 <Auto_AIR_COND_CONTROL>:
}



void Auto_AIR_COND_CONTROL(u8 Copy_u8LowerLimit,u8 Copy_u8UpperLimit)
{
    1326:	ff 92       	push	r15
    1328:	0f 93       	push	r16
    132a:	1f 93       	push	r17
    132c:	f8 2e       	mov	r15, r24
    132e:	06 2f       	mov	r16, r22

	u16 Local_u16TempVal;
	Local_u16TempVal = ADC_Read(0);
    1330:	80 e0       	ldi	r24, 0x00	; 0
    1332:	0e 94 82 09 	call	0x1304	; 0x1304 <ADC_Read>
	Local_u16TempVal = (float)Local_u16TempVal/2.0;
    1336:	a0 e0       	ldi	r26, 0x00	; 0
    1338:	b0 e0       	ldi	r27, 0x00	; 0
    133a:	bc 01       	movw	r22, r24
    133c:	cd 01       	movw	r24, r26
    133e:	0e 94 a9 04 	call	0x952	; 0x952 <__floatunsisf>
    1342:	20 e0       	ldi	r18, 0x00	; 0
    1344:	30 e0       	ldi	r19, 0x00	; 0
    1346:	40 e0       	ldi	r20, 0x00	; 0
    1348:	5f e3       	ldi	r21, 0x3F	; 63
    134a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    134e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>

	if(Local_u16TempVal > Copy_u8UpperLimit)
    1352:	10 e0       	ldi	r17, 0x00	; 0
    1354:	06 17       	cp	r16, r22
    1356:	17 07       	cpc	r17, r23
    1358:	20 f4       	brcc	.+8      	; 0x1362 <Auto_AIR_COND_CONTROL+0x3c>
	{
		DIO_enuSetPinValue(DIO_u8GROUP_D,DIO_u8PIN6,DIO_u8HIGH);
    135a:	83 e0       	ldi	r24, 0x03	; 3
    135c:	66 e0       	ldi	r22, 0x06	; 6
    135e:	41 e0       	ldi	r20, 0x01	; 1
    1360:	08 c0       	rjmp	.+16     	; 0x1372 <Auto_AIR_COND_CONTROL+0x4c>
	}
	else if(Local_u16TempVal < Copy_u8LowerLimit)
    1362:	8f 2d       	mov	r24, r15
    1364:	90 e0       	ldi	r25, 0x00	; 0
    1366:	68 17       	cp	r22, r24
    1368:	79 07       	cpc	r23, r25
    136a:	28 f4       	brcc	.+10     	; 0x1376 <Auto_AIR_COND_CONTROL+0x50>
	{
		DIO_enuSetPinValue(DIO_u8GROUP_D,DIO_u8PIN6,DIO_u8LOW);
    136c:	83 e0       	ldi	r24, 0x03	; 3
    136e:	66 e0       	ldi	r22, 0x06	; 6
    1370:	40 e0       	ldi	r20, 0x00	; 0
    1372:	0e 94 b0 08 	call	0x1160	; 0x1160 <DIO_enuSetPinValue>
	}
}
    1376:	1f 91       	pop	r17
    1378:	0f 91       	pop	r16
    137a:	ff 90       	pop	r15
    137c:	08 95       	ret

0000137e <ServoMotor_Door>:
void ServoMotor_Door(u8 Copy_u8Angle)
{

		float Local_floatDuty=0;
		Local_floatDuty = (((float)Copy_u8Angle/180.0)*5)+5;
		Timer_PWM(50,Local_floatDuty);
    137e:	90 e0       	ldi	r25, 0x00	; 0
    1380:	a0 e0       	ldi	r26, 0x00	; 0
    1382:	b0 e0       	ldi	r27, 0x00	; 0
    1384:	bc 01       	movw	r22, r24
    1386:	cd 01       	movw	r24, r26
    1388:	0e 94 a9 04 	call	0x952	; 0x952 <__floatunsisf>
    138c:	20 e0       	ldi	r18, 0x00	; 0
    138e:	30 e0       	ldi	r19, 0x00	; 0
    1390:	44 e3       	ldi	r20, 0x34	; 52
    1392:	53 e4       	ldi	r21, 0x43	; 67
    1394:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1398:	20 e0       	ldi	r18, 0x00	; 0
    139a:	30 e0       	ldi	r19, 0x00	; 0
    139c:	40 ea       	ldi	r20, 0xA0	; 160
    139e:	50 e4       	ldi	r21, 0x40	; 64
    13a0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    13a4:	20 e0       	ldi	r18, 0x00	; 0
    13a6:	30 e0       	ldi	r19, 0x00	; 0
    13a8:	40 ea       	ldi	r20, 0xA0	; 160
    13aa:	50 e4       	ldi	r21, 0x40	; 64
    13ac:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <__addsf3>
    13b0:	9b 01       	movw	r18, r22
    13b2:	ac 01       	movw	r20, r24
    13b4:	60 e0       	ldi	r22, 0x00	; 0
    13b6:	70 e0       	ldi	r23, 0x00	; 0
    13b8:	88 e4       	ldi	r24, 0x48	; 72
    13ba:	92 e4       	ldi	r25, 0x42	; 66
    13bc:	0e 94 37 07 	call	0xe6e	; 0xe6e <Timer_PWM>
}
    13c0:	08 95       	ret

000013c2 <__vector_12>:

	}//end of the while (1)
}

ISR (SPI_VECT)
{
    13c2:	1f 92       	push	r1
    13c4:	0f 92       	push	r0
    13c6:	0f b6       	in	r0, 0x3f	; 63
    13c8:	0f 92       	push	r0
    13ca:	11 24       	eor	r1, r1
    13cc:	8f 93       	push	r24
	Master_Command = SPDR;
    13ce:	8f b1       	in	r24, 0x0f	; 15
    13d0:	80 93 7d 01 	sts	0x017D, r24
}
    13d4:	8f 91       	pop	r24
    13d6:	0f 90       	pop	r0
    13d8:	0f be       	out	0x3f, r0	; 63
    13da:	0f 90       	pop	r0
    13dc:	1f 90       	pop	r1
    13de:	18 95       	reti

000013e0 <main>:

extern PWM_t PWM_AstrPWMConfig[TIMER_NUM];
volatile u8 Master_Command;		//This Command is sent by The master by SPI and Read by Slave in SPI ISR

int main()
{
    13e0:	0f 93       	push	r16
    13e2:	1f 93       	push	r17
/*********************************************INITIALIZATION******************************************/
		SPI_vidInit ();
    13e4:	0e 94 b7 07 	call	0xf6e	; 0xf6e <SPI_vidInit>
 	    Timer1_init();
    13e8:	0e 94 17 07 	call	0xe2e	; 0xe2e <Timer1_init>
		ADC_Init();
    13ec:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <ADC_Init>
		PWM_enuInit(PWM_AstrPWMConfig);
    13f0:	89 e6       	ldi	r24, 0x69	; 105
    13f2:	91 e0       	ldi	r25, 0x01	; 1
    13f4:	0e 94 c7 07 	call	0xf8e	; 0xf8e <PWM_enuInit>
		u8 Local_High_temp_limit = 28 ;
		u8 Local_Low_temp_limit = 21 ;

/*****************************************DEVICES OUTPUT CONFIGURATION*********************************************************/

		DIO_enuSetPinDirection(DIO_u8GROUP_D,DIO_u8PIN5,DIO_u8OUTPUT);
    13f8:	83 e0       	ldi	r24, 0x03	; 3
    13fa:	65 e0       	ldi	r22, 0x05	; 5
    13fc:	41 e0       	ldi	r20, 0x01	; 1
    13fe:	0e 94 46 08 	call	0x108c	; 0x108c <DIO_enuSetPinDirection>
		DIO_enuSetPinDirection(DIO_u8GROUP_D,DIO_u8PIN6,DIO_u8OUTPUT);
    1402:	83 e0       	ldi	r24, 0x03	; 3
    1404:	66 e0       	ldi	r22, 0x06	; 6
    1406:	41 e0       	ldi	r20, 0x01	; 1
    1408:	0e 94 46 08 	call	0x108c	; 0x108c <DIO_enuSetPinDirection>

		DIO_enuSetPinDirection(DIO_u8GROUP_A,DIO_u8PIN1,DIO_u8OUTPUT);
    140c:	80 e0       	ldi	r24, 0x00	; 0
    140e:	61 e0       	ldi	r22, 0x01	; 1
    1410:	41 e0       	ldi	r20, 0x01	; 1
    1412:	0e 94 46 08 	call	0x108c	; 0x108c <DIO_enuSetPinDirection>
		DIO_enuSetPinDirection(DIO_u8GROUP_A,DIO_u8PIN2,DIO_u8OUTPUT);
    1416:	80 e0       	ldi	r24, 0x00	; 0
    1418:	62 e0       	ldi	r22, 0x02	; 2
    141a:	41 e0       	ldi	r20, 0x01	; 1
    141c:	0e 94 46 08 	call	0x108c	; 0x108c <DIO_enuSetPinDirection>
		DIO_enuSetPinDirection(DIO_u8GROUP_A,DIO_u8PIN3,DIO_u8OUTPUT);
    1420:	80 e0       	ldi	r24, 0x00	; 0
    1422:	63 e0       	ldi	r22, 0x03	; 3
    1424:	41 e0       	ldi	r20, 0x01	; 1
    1426:	0e 94 46 08 	call	0x108c	; 0x108c <DIO_enuSetPinDirection>
		DIO_enuSetPinDirection(DIO_u8GROUP_A,DIO_u8PIN4,DIO_u8OUTPUT);
    142a:	80 e0       	ldi	r24, 0x00	; 0
    142c:	64 e0       	ldi	r22, 0x04	; 4
    142e:	41 e0       	ldi	r20, 0x01	; 1
    1430:	0e 94 46 08 	call	0x108c	; 0x108c <DIO_enuSetPinDirection>
		DIO_enuSetPinDirection(DIO_u8GROUP_A,DIO_u8PIN5,DIO_u8OUTPUT);
    1434:	80 e0       	ldi	r24, 0x00	; 0
    1436:	65 e0       	ldi	r22, 0x05	; 5
    1438:	41 e0       	ldi	r20, 0x01	; 1
    143a:	0e 94 46 08 	call	0x108c	; 0x108c <DIO_enuSetPinDirection>

		DIO_enuSetPinDirection(DIO_u8GROUP_B, DIO_u8PIN3, DIO_u8OUTPUT);
    143e:	81 e0       	ldi	r24, 0x01	; 1
    1440:	63 e0       	ldi	r22, 0x03	; 3
    1442:	41 e0       	ldi	r20, 0x01	; 1
    1444:	0e 94 46 08 	call	0x108c	; 0x108c <DIO_enuSetPinDirection>

			__asm("sei");// GIE Enable
    1448:	78 94       	sei
		SPI_EnableINT();
    144a:	0e 94 c3 07 	call	0xf86	; 0xf86 <SPI_EnableINT>
    144e:	00 e0       	ldi	r16, 0x00	; 0
	while (1)
	{

/******************************AIR CONDITIONER AUTOMATIC CONTROL*********************************************/

				if(AirCond_ManualControlFlag == 0)
    1450:	00 23       	and	r16, r16
    1452:	21 f4       	brne	.+8      	; 0x145c <main+0x7c>
				{
					Auto_AIR_COND_CONTROL(Local_Low_temp_limit,Local_High_temp_limit);
    1454:	85 e1       	ldi	r24, 0x15	; 21
    1456:	6c e1       	ldi	r22, 0x1C	; 28
    1458:	0e 94 93 09 	call	0x1326	; 0x1326 <Auto_AIR_COND_CONTROL>
				}


/***************************************************************************************************************/

		switch(Master_Command)
    145c:	80 91 7d 01 	lds	r24, 0x017D
    1460:	8c 30       	cpi	r24, 0x0C	; 12
    1462:	79 f1       	breq	.+94     	; 0x14c2 <main+0xe2>
    1464:	8d 30       	cpi	r24, 0x0D	; 13
    1466:	70 f4       	brcc	.+28     	; 0x1484 <main+0xa4>
    1468:	83 30       	cpi	r24, 0x03	; 3
    146a:	01 f1       	breq	.+64     	; 0x14ac <main+0xcc>
    146c:	84 30       	cpi	r24, 0x04	; 4
    146e:	28 f4       	brcc	.+10     	; 0x147a <main+0x9a>
    1470:	81 30       	cpi	r24, 0x01	; 1
    1472:	b1 f0       	breq	.+44     	; 0x14a0 <main+0xc0>
    1474:	82 30       	cpi	r24, 0x02	; 2
    1476:	61 f7       	brne	.-40     	; 0x1450 <main+0x70>
    1478:	16 c0       	rjmp	.+44     	; 0x14a6 <main+0xc6>
    147a:	84 30       	cpi	r24, 0x04	; 4
    147c:	d1 f0       	breq	.+52     	; 0x14b2 <main+0xd2>
    147e:	85 30       	cpi	r24, 0x05	; 5
    1480:	39 f7       	brne	.-50     	; 0x1450 <main+0x70>
    1482:	1a c0       	rjmp	.+52     	; 0x14b8 <main+0xd8>
    1484:	80 31       	cpi	r24, 0x10	; 16
    1486:	d9 f1       	breq	.+118    	; 0x14fe <main+0x11e>
    1488:	81 31       	cpi	r24, 0x11	; 17
    148a:	28 f4       	brcc	.+10     	; 0x1496 <main+0xb6>
    148c:	8d 30       	cpi	r24, 0x0D	; 13
    148e:	79 f1       	breq	.+94     	; 0x14ee <main+0x10e>
    1490:	8e 30       	cpi	r24, 0x0E	; 14
    1492:	f1 f6       	brne	.-68     	; 0x1450 <main+0x70>
    1494:	2e c0       	rjmp	.+92     	; 0x14f2 <main+0x112>
    1496:	81 31       	cpi	r24, 0x11	; 17
    1498:	b1 f1       	breq	.+108    	; 0x1506 <main+0x126>
    149a:	82 31       	cpi	r24, 0x12	; 18
    149c:	c9 f6       	brne	.-78     	; 0x1450 <main+0x70>
    149e:	3c c0       	rjmp	.+120    	; 0x1518 <main+0x138>
		{
		case ROOM1_LED_TOGGLE:
			DIO_enuTogPinValue(DIO_u8GROUP_A,DIO_u8PIN1);
    14a0:	80 e0       	ldi	r24, 0x00	; 0
    14a2:	61 e0       	ldi	r22, 0x01	; 1
    14a4:	0b c0       	rjmp	.+22     	; 0x14bc <main+0xdc>
			Master_Command=0;
			break;

		case ROOM2_LED_TOGGLE:
			DIO_enuTogPinValue(DIO_u8GROUP_A,DIO_u8PIN2);
    14a6:	80 e0       	ldi	r24, 0x00	; 0
    14a8:	62 e0       	ldi	r22, 0x02	; 2
    14aa:	08 c0       	rjmp	.+16     	; 0x14bc <main+0xdc>
			Master_Command=0;
			break;

		case ROOM3_LED_TOGGLE:
			DIO_enuTogPinValue(DIO_u8GROUP_A,DIO_u8PIN3);
    14ac:	80 e0       	ldi	r24, 0x00	; 0
    14ae:	63 e0       	ldi	r22, 0x03	; 3
    14b0:	05 c0       	rjmp	.+10     	; 0x14bc <main+0xdc>
			Master_Command=0;
			break;

		case ROOM4_LED_TOGGLE:
			DIO_enuTogPinValue(DIO_u8GROUP_A,DIO_u8PIN4);
    14b2:	80 e0       	ldi	r24, 0x00	; 0
    14b4:	64 e0       	ldi	r22, 0x04	; 4
    14b6:	02 c0       	rjmp	.+4      	; 0x14bc <main+0xdc>
			Master_Command=0;
			break;

		case ROOM5_LED_TOGGLE:
			DIO_enuTogPinValue(DIO_u8GROUP_A,DIO_u8PIN5);
    14b8:	80 e0       	ldi	r24, 0x00	; 0
    14ba:	65 e0       	ldi	r22, 0x05	; 5
    14bc:	0e 94 1a 09 	call	0x1234	; 0x1234 <DIO_enuTogPinValue>
    14c0:	1b c0       	rjmp	.+54     	; 0x14f8 <main+0x118>
			Master_Command=0;
			break;

		case DIMMER:
			SPI_DisableINT();
    14c2:	0e 94 c5 07 	call	0xf8a	; 0xf8a <SPI_DisableINT>
			Dimming_percent = SPI_ui8TransmitRecive(0);
    14c6:	80 e0       	ldi	r24, 0x00	; 0
    14c8:	0e 94 be 07 	call	0xf7c	; 0xf7c <SPI_ui8TransmitRecive>
    14cc:	18 2f       	mov	r17, r24
			PWM_enuSetFrequency(50,&PWM_AstrPWMConfig[0]);
    14ce:	82 e3       	ldi	r24, 0x32	; 50
    14d0:	90 e0       	ldi	r25, 0x00	; 0
    14d2:	69 e6       	ldi	r22, 0x69	; 105
    14d4:	71 e0       	ldi	r23, 0x01	; 1
    14d6:	0e 94 d5 07 	call	0xfaa	; 0xfaa <PWM_enuSetFrequency>
			PWM_enuSetDutyCycle(Dimming_percent, &PWM_AstrPWMConfig[0]);
    14da:	81 2f       	mov	r24, r17
    14dc:	69 e6       	ldi	r22, 0x69	; 105
    14de:	71 e0       	ldi	r23, 0x01	; 1
    14e0:	0e 94 22 08 	call	0x1044	; 0x1044 <PWM_enuSetDutyCycle>
			Master_Command=0;
    14e4:	10 92 7d 01 	sts	0x017D, r1
			SPI_EnableINT();
    14e8:	0e 94 c3 07 	call	0xf86	; 0xf86 <SPI_EnableINT>
    14ec:	b1 cf       	rjmp	.-158    	; 0x1450 <main+0x70>
			break;
		case OPEN_DOOR_COMMAND:
			ServoMotor_Door(90);
    14ee:	8a e5       	ldi	r24, 0x5A	; 90
    14f0:	01 c0       	rjmp	.+2      	; 0x14f4 <main+0x114>
			Master_Command=0;
			break;

		case CLOSE_DOOR_COMMAND:
			ServoMotor_Door(0);
    14f2:	80 e0       	ldi	r24, 0x00	; 0
    14f4:	0e 94 bf 09 	call	0x137e	; 0x137e <ServoMotor_Door>
			Master_Command=0;
    14f8:	10 92 7d 01 	sts	0x017D, r1
    14fc:	a9 cf       	rjmp	.-174    	; 0x1450 <main+0x70>
			break;

		case OPEN_AirCond_COMMAND:
			DIO_enuSetPinValue(DIO_u8GROUP_D,DIO_u8PIN6,DIO_u8HIGH);
    14fe:	83 e0       	ldi	r24, 0x03	; 3
    1500:	66 e0       	ldi	r22, 0x06	; 6
    1502:	41 e0       	ldi	r20, 0x01	; 1
    1504:	03 c0       	rjmp	.+6      	; 0x150c <main+0x12c>
			AirCond_ManualControlFlag =1;
			Master_Command=0;
			break;

		case CLOSE_AirCond_COMMAND:
			DIO_enuSetPinValue(DIO_u8GROUP_D,DIO_u8PIN6,DIO_u8LOW);
    1506:	83 e0       	ldi	r24, 0x03	; 3
    1508:	66 e0       	ldi	r22, 0x06	; 6
    150a:	40 e0       	ldi	r20, 0x00	; 0
    150c:	0e 94 b0 08 	call	0x1160	; 0x1160 <DIO_enuSetPinValue>
			AirCond_ManualControlFlag =1;
			Master_Command=0;
    1510:	10 92 7d 01 	sts	0x017D, r1
    1514:	01 e0       	ldi	r16, 0x01	; 1
    1516:	a2 cf       	rjmp	.-188    	; 0x145c <main+0x7c>
			break;
		case AUTO_AirCond_COMMAND:
			AirCond_ManualControlFlag =0;
			Master_Command=0;
    1518:	10 92 7d 01 	sts	0x017D, r1
    151c:	00 e0       	ldi	r16, 0x00	; 0
    151e:	9a cf       	rjmp	.-204    	; 0x1454 <main+0x74>

00001520 <__udivmodsi4>:
    1520:	a1 e2       	ldi	r26, 0x21	; 33
    1522:	1a 2e       	mov	r1, r26
    1524:	aa 1b       	sub	r26, r26
    1526:	bb 1b       	sub	r27, r27
    1528:	fd 01       	movw	r30, r26
    152a:	0d c0       	rjmp	.+26     	; 0x1546 <__udivmodsi4_ep>

0000152c <__udivmodsi4_loop>:
    152c:	aa 1f       	adc	r26, r26
    152e:	bb 1f       	adc	r27, r27
    1530:	ee 1f       	adc	r30, r30
    1532:	ff 1f       	adc	r31, r31
    1534:	a2 17       	cp	r26, r18
    1536:	b3 07       	cpc	r27, r19
    1538:	e4 07       	cpc	r30, r20
    153a:	f5 07       	cpc	r31, r21
    153c:	20 f0       	brcs	.+8      	; 0x1546 <__udivmodsi4_ep>
    153e:	a2 1b       	sub	r26, r18
    1540:	b3 0b       	sbc	r27, r19
    1542:	e4 0b       	sbc	r30, r20
    1544:	f5 0b       	sbc	r31, r21

00001546 <__udivmodsi4_ep>:
    1546:	66 1f       	adc	r22, r22
    1548:	77 1f       	adc	r23, r23
    154a:	88 1f       	adc	r24, r24
    154c:	99 1f       	adc	r25, r25
    154e:	1a 94       	dec	r1
    1550:	69 f7       	brne	.-38     	; 0x152c <__udivmodsi4_loop>
    1552:	60 95       	com	r22
    1554:	70 95       	com	r23
    1556:	80 95       	com	r24
    1558:	90 95       	com	r25
    155a:	9b 01       	movw	r18, r22
    155c:	ac 01       	movw	r20, r24
    155e:	bd 01       	movw	r22, r26
    1560:	cf 01       	movw	r24, r30
    1562:	08 95       	ret

00001564 <__prologue_saves__>:
    1564:	2f 92       	push	r2
    1566:	3f 92       	push	r3
    1568:	4f 92       	push	r4
    156a:	5f 92       	push	r5
    156c:	6f 92       	push	r6
    156e:	7f 92       	push	r7
    1570:	8f 92       	push	r8
    1572:	9f 92       	push	r9
    1574:	af 92       	push	r10
    1576:	bf 92       	push	r11
    1578:	cf 92       	push	r12
    157a:	df 92       	push	r13
    157c:	ef 92       	push	r14
    157e:	ff 92       	push	r15
    1580:	0f 93       	push	r16
    1582:	1f 93       	push	r17
    1584:	cf 93       	push	r28
    1586:	df 93       	push	r29
    1588:	cd b7       	in	r28, 0x3d	; 61
    158a:	de b7       	in	r29, 0x3e	; 62
    158c:	ca 1b       	sub	r28, r26
    158e:	db 0b       	sbc	r29, r27
    1590:	0f b6       	in	r0, 0x3f	; 63
    1592:	f8 94       	cli
    1594:	de bf       	out	0x3e, r29	; 62
    1596:	0f be       	out	0x3f, r0	; 63
    1598:	cd bf       	out	0x3d, r28	; 61
    159a:	09 94       	ijmp

0000159c <__epilogue_restores__>:
    159c:	2a 88       	ldd	r2, Y+18	; 0x12
    159e:	39 88       	ldd	r3, Y+17	; 0x11
    15a0:	48 88       	ldd	r4, Y+16	; 0x10
    15a2:	5f 84       	ldd	r5, Y+15	; 0x0f
    15a4:	6e 84       	ldd	r6, Y+14	; 0x0e
    15a6:	7d 84       	ldd	r7, Y+13	; 0x0d
    15a8:	8c 84       	ldd	r8, Y+12	; 0x0c
    15aa:	9b 84       	ldd	r9, Y+11	; 0x0b
    15ac:	aa 84       	ldd	r10, Y+10	; 0x0a
    15ae:	b9 84       	ldd	r11, Y+9	; 0x09
    15b0:	c8 84       	ldd	r12, Y+8	; 0x08
    15b2:	df 80       	ldd	r13, Y+7	; 0x07
    15b4:	ee 80       	ldd	r14, Y+6	; 0x06
    15b6:	fd 80       	ldd	r15, Y+5	; 0x05
    15b8:	0c 81       	ldd	r16, Y+4	; 0x04
    15ba:	1b 81       	ldd	r17, Y+3	; 0x03
    15bc:	aa 81       	ldd	r26, Y+2	; 0x02
    15be:	b9 81       	ldd	r27, Y+1	; 0x01
    15c0:	ce 0f       	add	r28, r30
    15c2:	d1 1d       	adc	r29, r1
    15c4:	0f b6       	in	r0, 0x3f	; 63
    15c6:	f8 94       	cli
    15c8:	de bf       	out	0x3e, r29	; 62
    15ca:	0f be       	out	0x3f, r0	; 63
    15cc:	cd bf       	out	0x3d, r28	; 61
    15ce:	ed 01       	movw	r28, r26
    15d0:	08 95       	ret

000015d2 <_exit>:
    15d2:	f8 94       	cli

000015d4 <__stop_program>:
    15d4:	ff cf       	rjmp	.-2      	; 0x15d4 <__stop_program>
